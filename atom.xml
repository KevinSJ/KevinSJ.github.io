<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kevin Jiang&#39;s Technical Blog</title>
  
  
  <link href="https://jiangsc.me/atom.xml" rel="self"/>
  
  <link href="https://jiangsc.me/"/>
  <updated>2023-05-01T04:38:21.154Z</updated>
  <id>https://jiangsc.me/</id>
  
  <author>
    <name>KevinSJ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Lessons learnt from Node.js production incidents</title>
    <link href="https://jiangsc.me/2023/03/11/2023-03-11-technical-postmortem/"/>
    <id>https://jiangsc.me/2023/03/11/2023-03-11-technical-postmortem/</id>
    <published>2023-03-11T03:44:09.000Z</published>
    <updated>2023-05-01T04:38:21.154Z</updated>
    
    <content type="html"><![CDATA[<p>As software developers, we all strive to write bug-free and reliable code. However, sometimes unexpected issues arise, and we need to react quickly to mitigate their impact. In this article, we will discuss several real-world incidents that occurred in a production environment. We will examine the root cause of the incident and discuss the lessons learned from this experience.</p><h2 id="Prior-events"><a href="#Prior-events" class="headerlink" title="Prior events"></a>Prior events</h2><p>On March 2nd, release, migration to the latest container platform, accompanied with a huge release for the squad I&#39;m in.<br>On March 9th, the first release after the platform migration was deployed to production.</p><span id="more"></span><h2 id="Production-incidents"><a href="#Production-incidents" class="headerlink" title="Production incidents"></a>Production incidents</h2><h3 id="Container-restart-caused-by-memory-leak"><a href="#Container-restart-caused-by-memory-leak" class="headerlink" title="Container restart caused by memory leak"></a>Container restart caused by memory leak</h3><p>On March 7th, I was notified by a tech lead from a different squad about a memory leaks in our containers running in production. The said memory leak had forced the production containers to be restarted for 2 times since the deployment, this is obviously not a good sign, so I put away all of my work and start the investigation on this issue immediately.</p><h4 id="Investigation-on-what-has-changed"><a href="#Investigation-on-what-has-changed" class="headerlink" title="Investigation on what has changed"></a>Investigation on what has changed</h4><p>Since March 7th was only the 3rd working day after the release on March 2nd, I started by investigating the code changes that had been merged. I spent roughly 15 minutes on this investigation, and there was nothing obvious to me that can cause this leak from the code perspective.</p><p>Another question that immediately comes to my mind was that, if that was indeed a code issue, it should have been caught by testers. So looking into the code might not be useful after all.</p><p>My next step was to look into the logs. What I can see from the logs is that there was lots of 403 errors related to a 3rd party SDK. This SDK keeps trying to connect to an external address, even if it has received a 403 error, it had generated <em>a lot</em> of errors in our logs.</p><p>This made me suspect the actual cause of the issue lays at the network layer. So, I contacted the network team to look into this issue.</p><p>Eventually, we were able to locate one of the URLs was blocked at the Squid proxy level, and after adding it to the white list eventually resolved the problem.</p><h4 id="Root-Cause-Analysis"><a href="#Root-Cause-Analysis" class="headerlink" title="Root Cause Analysis"></a>Root Cause Analysis</h4><p>The root cause of the memory leak was because of the continuous networking call that is failing. Because this network calls are not properly garbage collected, the memory will grow exponentially, which will eventually result in a OOMKILL (out of memory kill) from OpenShift 4.</p><h4 id="Mitigations"><a href="#Mitigations" class="headerlink" title="Mitigations"></a>Mitigations</h4><ul><li>Short term: allow outbound traffic to 3rd party site.</li><li>Long term: Check and see why the network call is causing the memory leak. Even in the case of a network failure, the memory leak should not have happened in well written code.</li></ul><h4 id="Lessons-learnt"><a href="#Lessons-learnt" class="headerlink" title="Lessons learnt"></a>Lessons learnt</h4><ul><li>Platform migration need to be treated with care. In any case, the minimal monitoring needs to be done in lower environment after the migration has been done.</li><li>Think in advance, what network layer issue could be caused by the migration, such as ports, firewalls, and proxies.</li></ul><h3 id="Container-back-off-in-production-environment-after-deployment"><a href="#Container-back-off-in-production-environment-after-deployment" class="headerlink" title="Container back-off in production environment after deployment"></a>Container back-off in production environment after deployment</h3><p>This one was a really unexpected one. The deployment of the weekly release started at 1 pm on March 9th. Shortly after the release, the DevOPs notified us that they had noticed our containers were restarting every few minutes. Because we had no immediate solution, we had to back-off the weekly release.</p><h4 id="Investigation"><a href="#Investigation" class="headerlink" title="Investigation"></a>Investigation</h4><p>Due to the importance of items in this weekly release, we had to begin the investigation immediately. I led the investigation and start with almost the same thing as before: checking the list of changes, and then checking the logs.</p><p>One of the most suspicious items on the list is Node 18 upgrade. To further prove this, I had to look into the logs. In the log, I can see that an error was thrown and the container crashed. The error was related to an error from down stream.</p><p>Looking at the logs from previous days, I found those error had existed for quite some time, and in fact, the error has been there since the release on March 2nd. At this point, I am confident that the issue was related to Node 18 upgrade.</p><h4 id="Root-Cause-Analysis-1"><a href="#Root-Cause-Analysis-1" class="headerlink" title="Root Cause Analysis"></a>Root Cause Analysis</h4><ul><li>The Node 18 upgrade is obviously a direct cause of the crash. Starting in Node 15, one of the behaviors has changed, more specifically, an unhandled promise will crash the application. This behavior was different in previous version of Node (e.g. Node 12). In previous versions, unhandled promise rejection will not crash the app, but will show a deprecated warning.</li><li>However there are more to it. Multiple questions also need to be answered:<ul><li>What was wrong with the request send to down stream service?</li><li>Why was the error response returned from the downstream service not handled correctly -- why is the unhandled promise rejection thrown rather than a grace failure?</li><li>Why wasn&#39;t this caught in the unit test?</li></ul></li><li>Beside coding, I also have my doubts on testing as well as release management:<ul><li>How was the testing done on the Node 18 migration, why wasn&#39;t this issue found during manual testing?</li><li>What was the risk with upgrade to the Node 18, was it made clear and known to the product owner and team?</li><li>What was the rationale to bundle the Node 18 migration together with something that&#39;s of high importance and urgency to the business?</li></ul></li></ul><h4 id="Mitigations-1"><a href="#Mitigations-1" class="headerlink" title="Mitigations"></a>Mitigations</h4><ul><li>Short term:<ul><li>On the night of this incident, we developed a proper workaround to the issue. I called it a work around, because the downstream error is still not mitigated, we are still seeing the error, but we add a flag to Node engine so it would treat the unhandled promise rejection same as before using the flag <code>--unhandled-rejections=warn</code>, this mitigation was deployed the next day.</li><li>At the same time, developers of downstream services notified us of an issue with the way we are calling the downstream service, which resulted in the error response. Because this issue had high customer impacts, we had to do another deployment to production on the same day.</li></ul></li><li>Long term:<ul><li>Thoroughly investigate the way we used promises in the codebase and made sure we&#39;ve had correctly mitigated all place that have this issue before we remove the flag.</li><li>Investigate and find ways to cover this specific scenario (unhandled promise rejection) through unit tests.</li><li>Investigate what can be improved in the process to avoid such things from happening.</li></ul></li></ul><h4 id="Lessons-Learnt"><a href="#Lessons-Learnt" class="headerlink" title="Lessons Learnt"></a>Lessons Learnt</h4><ul><li>The main issue with the code turned out to be a misunderstanding of how promise works: in JavaScript, the promise code start execution as soon as it is created. <code>Promise.all</code> is merely a mechanism to wait for the process to finish execution. This misunderstanding caused the erroneous code which led to the unhandled promise rejection and the eventual crash.</li><li>It was also discovered that the wrong request to the downstream service had existed since at least the previous October, and the issue was amplified after the new journey went live on March 2nd. This was due to a miscommunication at the time.</li><li>Testing: Testers need to cover some negative scenarios when doing regression. The direct cause of the issue would have been caught if some negative scenarios are covered as part of the regression testing.</li><li>Product Ownership: Product owner should evaluate the risks associated with release items together with coding and testing team. Both teams should give independent evaluation of the risk associated with the items. Product owners should make the decision based on the importance and risks associated with each release item. Items with high business value thus high importance should not be bundled with items with high risks.</li></ul><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>These incidents highlighted the importance of understanding how promises work in JavaScript, comprehensive testing, effective communication and collaboration between teams, and risk evaluation in the release process. The team was able to identify the root cause of the issue, develop short-term and long-term mitigations, and learn valuable lessons for future development and testing processes.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;As software developers, we all strive to write bug-free and reliable code. However, sometimes unexpected issues arise, and we need to react quickly to mitigate their impact. In this article, we will discuss several real-world incidents that occurred in a production environment. We will examine the root cause of the incident and discuss the lessons learned from this experience.&lt;/p&gt;
&lt;h2 id=&quot;Prior-events&quot;&gt;&lt;a href=&quot;#Prior-events&quot; class=&quot;headerlink&quot; title=&quot;Prior events&quot;&gt;&lt;/a&gt;Prior events&lt;/h2&gt;&lt;p&gt;On March 2nd, release, migration to the latest container platform, accompanied with a huge release for the squad I&amp;#39;m in.&lt;br&gt;On March 9th, the first release after the platform migration was deployed to production.&lt;/p&gt;</summary>
    
    
    
    
    <category term="JavaScript" scheme="https://jiangsc.me/tags/JavaScript/"/>
    
    <category term="postmortem" scheme="https://jiangsc.me/tags/postmortem/"/>
    
    <category term="production incident" scheme="https://jiangsc.me/tags/production-incident/"/>
    
    <category term="Node.js" scheme="https://jiangsc.me/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Quality of life CLI tips for Android Mobile App Development - 1</title>
    <link href="https://jiangsc.me/2023/02/11/mobile-dev-cli-tips-1/"/>
    <id>https://jiangsc.me/2023/02/11/mobile-dev-cli-tips-1/</id>
    <published>2023-02-11T05:29:19.000Z</published>
    <updated>2023-05-01T04:38:21.158Z</updated>
    
    <content type="html"><![CDATA[<p>I&#39;m not a mobile app developer, but for my day-to-day job, I&#39;m responsible for creating APIs that&#39;s consumed by mobile client. This means I often have both iOS and Android simulator running at the same time.</p><p>Normally, you would have to open both XCode and Android Studio respectively as that is how things are supposed to work: start each IDE, build the app in the IDE, and then run the app in the simulator through the IDE.</p><p>I don&#39;t like to do things this way, it is inefficient and will (most likely) consume lots of resources. Therefore, I developed my own scripts to do things efficiently in the command line. In this article, I will share some of the scripts I use when working with Android code, I believe these scripts are huge quality of life improvement for developers like me who need to run mobile apps in a simulator as part of their day-to-day job, but not necessarily modify or commit to the mobile code. Some of the things discussed in this article have already been mentioned briefly <a href="/2022/10/05/android-emulator-carrier-simulation/">last year</a>.</p><span id="more"></span><h3 id="Testing-deep-links-in-Android-Emulator"><a href="#Testing-deep-links-in-Android-Emulator" class="headerlink" title="Testing deep links in Android Emulator"></a>Testing deep links in Android Emulator</h3><p>If you are not familiar with deep links, check out <a href="https://developer.android.com/training/app-links/deep-linking">article about deep link on android</a>.</p><p>I will cover several methods I have found to test deep links.</p><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><a href="#-1">Method 1: Sending SMS through the telnet with link</a></li><li class="tab"><a href="#-2">Method 2: Directly test the deep link through ADB and intent</a></li></ul><div class="tab-content"><div class="tab-pane active" id="-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">sendDeepLink</span></span>() &#123;</span><br><span class="line">    <span class="comment"># Define your deep link here the first param passed to this function will</span></span><br><span class="line">    <span class="comment"># be the actual deep link</span></span><br><span class="line">    URL=<span class="string">&quot;http://YOUR_DEEP_LINK_DOMAIN/&quot;</span><span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">    nc localhost 5554 &lt;&lt; <span class="string">_EOF &gt; /dev/null 2&gt;&amp;1</span></span><br><span class="line"><span class="string">auth $(cat  $HOME/.emulator_console_auth_token)</span></span><br><span class="line"><span class="string">sms send SENDER_NAME $URL</span></span><br><span class="line"><span class="string">_EOF</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">URL=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">sendDeepLink <span class="string">&quot;<span class="variable">$URL</span>&quot;</span></span><br></pre></td></tr></table></figure><p>The script above utilize <a href="https://en.wikipedia.org/wiki/Telnet">telnet</a>, it is a somewhat ancient protocol that&#39;s still implemented in Android Emulators. You can potentially use telnet for many different things. For our purpose, I&#39;m just showing how to send SMS through telnet.</p><p>Starting from the line that begins with nc, here I&#39;m using nc to connect to Android telnet port, which is localhost:5554. I&#39;m also utilizing Heredoc, I&#39;m passing the emulator_console_auth_token as the first thing and authenticate the telnet connection: <code>auth $(cat  $HOME/.emulator_console_auth_token)</code>. If we don&#39;t do this, we will have to copy &amp; paste whatever is in the auth_token file manually.</p><p>Once authenticated to telnet, we will start sending the fake SMS, because this line <code>sms send SENDER_NAME $URL</code> is still part of the Heredoc, so it is ran through the telnet connection. This is instructing the telnet terminal to send the <code>$URL</code> to the emulator as <code>SENDER_NAME</code>. And we close the Heredoc using <code>_EOF</code> which is what we used to open the Heredoc.</p><p>If you would like to know more about telnet, you can checkout the Android docs on <a href="https://developer.android.com/studio/run/emulator-console#querycontrol">telnet console commands</a></p></div><div class="tab-pane" id="-2"><p><code>adb shell am start -W -a android.intent.action.VIEW -d &quot;your deep link url&quot;</code></p><p>This is probably way more easier than the telnet method. However, I don&#39;t have full Understanding of how this works (and I haven&#39;t tested), so I&#39;m not going to try and explain it.</p></div></div></div><p>I found Telnet and ADB are really good tools to help Android development. Hope you find the tips above helpful.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;I&amp;#39;m not a mobile app developer, but for my day-to-day job, I&amp;#39;m responsible for creating APIs that&amp;#39;s consumed by mobile client. This means I often have both iOS and Android simulator running at the same time.&lt;/p&gt;
&lt;p&gt;Normally, you would have to open both XCode and Android Studio respectively as that is how things are supposed to work: start each IDE, build the app in the IDE, and then run the app in the simulator through the IDE.&lt;/p&gt;
&lt;p&gt;I don&amp;#39;t like to do things this way, it is inefficient and will (most likely) consume lots of resources. Therefore, I developed my own scripts to do things efficiently in the command line. In this article, I will share some of the scripts I use when working with Android code, I believe these scripts are huge quality of life improvement for developers like me who need to run mobile apps in a simulator as part of their day-to-day job, but not necessarily modify or commit to the mobile code. Some of the things discussed in this article have already been mentioned briefly &lt;a href=&quot;/2022/10/05/android-emulator-carrier-simulation/&quot;&gt;last year&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Android" scheme="https://jiangsc.me/tags/Android/"/>
    
    <category term="tips" scheme="https://jiangsc.me/tags/tips/"/>
    
    <category term="telnet" scheme="https://jiangsc.me/tags/telnet/"/>
    
    <category term="Command line" scheme="https://jiangsc.me/tags/Command-line/"/>
    
  </entry>
  
  <entry>
    <title>CLI tips: create PR for Azure DevOps from CLI</title>
    <link href="https://jiangsc.me/2023/02/08/Cli-tips-create-azure-devops-pr/"/>
    <id>https://jiangsc.me/2023/02/08/Cli-tips-create-azure-devops-pr/</id>
    <published>2023-02-08T08:04:27.000Z</published>
    <updated>2023-02-11T05:27:08.387Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Motivation-Slow-and-confusing-web-interface"><a href="#Motivation-Slow-and-confusing-web-interface" class="headerlink" title="Motivation: Slow and confusing web interface"></a>Motivation: Slow and confusing web interface</h3><p>Azure DevOps, probably one of the worst tools you can get for a your software team, I hated it with passion. The reason that company chooses it over any other software is probably because they can get a decent enough discount when bundled with the M$&#39;s shitty Outlook, Teams, and office suite.<br>If I could, I would give Azure DevOps&#39;s web interface and overall experience a 0 out of 10: it is slow, difficult to navigate, and way behind what you would get from GitHub or GitLab.<br>Enough for the ranting, in short, I hate Azure DevOps&#39; web interface, therefore, I prefer to use the CLI to interact with it.</p><span id="more"></span><h3 id="Azure-CLI-Generic-at-a-cost"><a href="#Azure-CLI-Generic-at-a-cost" class="headerlink" title="Azure CLI: Generic at a cost"></a>Azure CLI: Generic at a cost</h3><p>Azure DevOps, however bad it is, still provides a command line interface to interact with its API.</p><p>As an example, if you want to create a PR through azure DevOps, you can run:<br><code>az pr create -s &#39;source branch&#39; -t &#39;target branch&#39; --title &#39;title&#39; --workItem &#39;ID&#39; --description &quot;description&quot;</code></p><p>I understand that this CLI is intended to be a general audience, so it is meant to be generic, but my issues with this command are:</p><ol><li>It is just too difficult to remember all the options without looking at the docs.</li><li>Have to type the target, source branch and&#x2F;or work item manually.</li></ol><p>What I want to achieve:</p><ol><li>Interactivity: can choose if open in browser and&#x2F;or draft mode or not</li><li>Simple and intuitive: lists all the available branches, and allow selecting one as target and&#x2F;or source.</li><li>Work item linking and transition: Automatically transition the linked work item so it transition from <code>Todo</code> to <code>In progress</code></li></ol><h3 id="Road-to-the-ideal-script"><a href="#Road-to-the-ideal-script" class="headerlink" title="Road to the ideal script"></a>Road to the ideal script</h3><p>To achieve the Interactivity I wanted, I had opted to use a tool called <code>fzf</code> which is a fuzzy finder.</p><p>The script below is what I ended up with. It is quite bloated, but does what I look for.</p><p>Note before using this script, you need to have:</p><ol><li>FZF installed.</li><li>Azure CLI authenticated from your command line, meaning you can already create pr in the &quot;dumb&quot; way I mentioned above.</li></ol><figure class="highlight bash"><figcaption><span>azure-devops-script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">LINE=<span class="string">&quot;<span class="subst">$(printf %<span class="string">&quot;<span class="subst">$(tput cols)</span>&quot;</span>s | tr <span class="string">&quot; &quot;</span> <span class="string">&quot;-&quot;</span>)</span>&quot;</span> <span class="comment"># https://stackoverflow.com/a/42763333/9470346</span></span><br><span class="line">WORKITEMARG=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">createPR</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> -e <span class="string">&quot;Fetching all git origins...&quot;</span></span><br><span class="line">  git fetch --all --prune</span><br><span class="line"></span><br><span class="line">  <span class="built_in">read</span> -rp <span class="string">&quot;</span></span><br><span class="line"><span class="string">Choose source branch (Y/N): &quot;</span> chooseSource</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;LINE&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$chooseSource</span>&quot;</span> == <span class="string">&quot;Y&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    sourceBranch=$(git for-each-ref --<span class="built_in">sort</span>=-committerdate \</span><br><span class="line">      --format=<span class="string">&#x27;%(refname:short) (%(committerdate:relative))&#x27;</span> refs/heads \ |</span><br><span class="line">      fzf --prompt <span class="string">&quot;Choose a source branch: &quot;</span> --reverse --nth=1 --preview <span class="string">&#x27;git log --oneline --color &#123;1&#125;...&#123;1&#125;~5&#x27;</span>\ |</span><br><span class="line">      awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;Using current branch as source branch&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;Pushing first...&quot;</span></span><br><span class="line">    sourceBranch=$(git branch --show-current)</span><br><span class="line">    git push origin <span class="string">&quot;<span class="variable">$sourceBranch</span>&quot;</span> --no-verify</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Source Branch:&quot;</span><span class="string">&quot;<span class="variable">$sourceBranch</span>&quot;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;LINE&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  targetBranch=$(git for-each-ref --<span class="built_in">sort</span>=-committerdate \</span><br><span class="line">    --format=<span class="string">&#x27;%(refname:short) (%(committerdate:relative))&#x27;</span> refs/heads \ |</span><br><span class="line">    fzf --prompt <span class="string">&quot;Choose a target branch: &quot;</span> --reverse --nth=1 --preview <span class="string">&#x27;git log --oneline --color &#123;1&#125;...&#123;1&#125;~5&#x27;</span>\ |</span><br><span class="line">    awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Target Branch:&quot;</span><span class="string">&quot;<span class="variable">$targetBranch</span>&quot;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;LINE&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">read</span> -rp <span class="string">&quot;</span></span><br><span class="line"><span class="string">Add workitem (Y/N): &quot;</span> workItemReq</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;PR title: &quot;</span><span class="string">&quot;<span class="variable">$workItemReq</span>&quot;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;LINE&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$workItemReq</span>&quot;</span> == <span class="string">&quot;Y&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$workItemReq</span>&quot;</span> == <span class="string">&quot;y&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    workItem=$(az boards query --<span class="built_in">id</span> <span class="variable">$BOARD_ID</span> --output jsonc|jq -r <span class="string">&#x27;.[]|(.id|tostring) + &quot; &quot; + (.fields[&quot;System.Title&quot;])&#x27;</span>|fzf --prompt <span class="string">&quot;Choose a workItem&quot;</span>|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="variable">$workItem</span> ]]; <span class="keyword">then</span></span><br><span class="line">      <span class="comment">## transition selected workitem to in progress</span></span><br><span class="line">      az boards work-item update --<span class="built_in">id</span> <span class="variable">$workItem</span> --state <span class="string">&quot;In Progress&quot;</span></span><br><span class="line">      WORKITEMARG=<span class="string">&quot;--work-items <span class="variable">$workItem</span>&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="built_in">read</span> -rp <span class="string">&quot;</span></span><br><span class="line"><span class="string">Title for your PR: &quot;</span> title</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;PR title: &quot;</span><span class="string">&quot;<span class="variable">$title</span>&quot;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;LINE&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">read</span> -rp <span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Description for your PR: &quot;</span> description</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;PR description: &quot;</span><span class="string">&quot;<span class="variable">$description</span>&quot;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;LINE&#125;</span>&quot;</span></span><br><span class="line">  <span class="keyword">if</span> [[  <span class="string">&quot;<span class="variable">$description</span>&quot;</span> ]] ; <span class="keyword">then</span></span><br><span class="line">    DESCRIPTION=<span class="string">&quot;-d <span class="variable">$description</span>&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">read</span> -rp <span class="string">&quot;</span></span><br><span class="line"><span class="string">Open in browser (Y/N, N): &quot;</span> openBrowser</span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$openBrowser</span>&quot;</span> == <span class="string">&quot;Y&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$openBrowser</span>&quot;</span> == <span class="string">&quot;y&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    OPEN_BROWSER_ARG=<span class="string">&quot;--open&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="built_in">read</span> -rp <span class="string">&quot;</span></span><br><span class="line"><span class="string">Is Draft? (Y/N, N): &quot;</span> isDraft</span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$isDraft</span>&quot;</span> == <span class="string">&quot;Y&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$isDraft</span>&quot;</span> == <span class="string">&quot;y&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    IS_DRAFT_ARG=<span class="string">&quot;--draft&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">  az repos <span class="built_in">pr</span> create -t <span class="string">&quot;<span class="variable">$targetBranch</span>&quot;</span> -s <span class="string">&quot;<span class="variable">$sourceBranch</span>&quot;</span> <span class="variable">$WORKITEMARG</span> <span class="variable">$DESCRIPTION</span> <span class="variable">$IS_DRAFT_ARG</span> --title <span class="string">&quot;<span class="variable">$title</span>&quot;</span> <span class="variable">$OPEN_BROWSER_ARG</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">createPR</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Motivation-Slow-and-confusing-web-interface&quot;&gt;&lt;a href=&quot;#Motivation-Slow-and-confusing-web-interface&quot; class=&quot;headerlink&quot; title=&quot;Motivation: Slow and confusing web interface&quot;&gt;&lt;/a&gt;Motivation: Slow and confusing web interface&lt;/h3&gt;&lt;p&gt;Azure DevOps, probably one of the worst tools you can get for a your software team, I hated it with passion. The reason that company chooses it over any other software is probably because they can get a decent enough discount when bundled with the M$&amp;#39;s shitty Outlook, Teams, and office suite.&lt;br&gt;If I could, I would give Azure DevOps&amp;#39;s web interface and overall experience a 0 out of 10: it is slow, difficult to navigate, and way behind what you would get from GitHub or GitLab.&lt;br&gt;Enough for the ranting, in short, I hate Azure DevOps&amp;#39; web interface, therefore, I prefer to use the CLI to interact with it.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Linux" scheme="https://jiangsc.me/tags/Linux/"/>
    
    <category term="Tips" scheme="https://jiangsc.me/tags/Tips/"/>
    
    <category term="Azure" scheme="https://jiangsc.me/tags/Azure/"/>
    
    <category term="CLI" scheme="https://jiangsc.me/tags/CLI/"/>
    
  </entry>
  
  <entry>
    <title>Go: Split Long Text By Byte Count</title>
    <link href="https://jiangsc.me/2023/01/30/GO-Split-long-text-by-byte-count/"/>
    <id>https://jiangsc.me/2023/01/30/GO-Split-long-text-by-byte-count/</id>
    <published>2023-01-30T00:04:19.000Z</published>
    <updated>2023-01-30T05:53:50.488Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Motivation-Need-to-split-text"><a href="#Motivation-Need-to-split-text" class="headerlink" title="Motivation: Need to split text"></a>Motivation: Need to split text</h3><p>I&#39;m not a professional GO developer, but I do like GO, I have taught myself some Go by contributing to open source projects, and since then GO has become my language of choice for personal projects.</p><p>Recently, I have encountered an interesting problem when working on one of my personal projects. For this project, I need to split a long text by <strong>byte</strong> count. The eventual result is an array of strings in which each of element is <strong>less or equal</strong> to the byte size that&#39;s passed in.</p><h3 id="Naive-x2F-Wrong-approach-Split-by-number-of-characters"><a href="#Naive-x2F-Wrong-approach-Split-by-number-of-characters" class="headerlink" title="Naive&#x2F;Wrong approach: Split by number of characters"></a>Naive&#x2F;Wrong approach: Split by number of characters</h3><span id="more"></span><p>At first glance, I thought I can just use the character count, which assumes a single character will always take one byte. Well, this turns out to be a terrible idea.</p><h3 id="Background-UTF-8-and-Bytes"><a href="#Background-UTF-8-and-Bytes" class="headerlink" title="Background: UTF-8 and Bytes"></a>Background: UTF-8 and Bytes</h3><p>In GO (as well as in most major programming languages), a character is usually encoded in the form of <strong>UTF-8</strong>. According to <a href="https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/">this brilliant article</a>, UTF-8 in memory uses 8 bit bytes and</p><blockquote><p>In UTF-8, every code point from 0-127 is stored in a single byte. Only code points 128 and above are stored using 2, 3, in fact, up to 6 bytes.</p></blockquote><p>Coincidentally, all the English characters fits into the first byte of an UTF-8 character which is what&#39;s being used in ASCII and ANSI. Therefore, if all the characters in the string are English characters, then the assumption of 1 byte per character is correct.</p><p>However, it is wrong to make that assumption. As in my case, I need to deal with Chinese characters which made things complicated.</p><h3 id="Discovery-String-and-Rune-in-Go"><a href="#Discovery-String-and-Rune-in-Go" class="headerlink" title="Discovery: String and Rune in Go"></a>Discovery: String and Rune in Go</h3><p>In Go, a string is in effect a read-only slice of bytes. What this implies is that if you do a simple for loop over a string, and print the result, you won&#39;t get what you expect.</p><p>Take the following program as an example:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">const</span> sample = <span class="string">&quot;Hello&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(sample); i++ &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;% x&quot;</span>, sample[i])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The result of the above print function will be <code>48 65 6c 6c 6f</code>, which are the hex representations of the each of the character or rune in the string. If you convert them to decimal, you will get 72 101 108 108 111, this means they will only take 8 bit or 1 byte.</p><p>However, this will not be true for Chinese character or any other non-Latin characters.As an example, the following program:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">const</span> sample = <span class="string">&quot;國語&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(sample); i++ &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;% x&quot;</span>, sample[i])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The above code will print <code>e5 9c 8b e8 aa 9e</code>, if you again convert them back to decimal. As you can see, these two Chinese characters take a total of 6 bytes (!), meaning each one of them take 2 bytes.</p><p>There are several implications to this:</p><ol><li><p>If you want to create chunk from a string, you can&#39;t simply just add and count the byte and then truncate when your given limit is reached, this will most likely result in invalid Unicode character&#x2F;string. To prove this, consider the following example, we have a string: <code>汽,車</code> (this means car in Chinese, but there&#39;s an <strong>English comma</strong> in between).<br><br>We want to truncate and create chunks of strings that occupies 3 bytes each. If we just add the bytes up and truncate, then because the English comma takes 1 byte, and the Chinese character afterward takes 3 bytes, the result will be an invalid string by combining the whole byte that represents the English comma, and the first two bytes that represents the character 車.</p></li><li><p>In UTF-8 encoding, each character can take at most 8 bits (or 4 bytes). But you won&#39;t be able to know how many bytes the character actually take beforehand. Fortunately, there&#39;s a way in Go to read by <strong>one UTF-8 encoded rune</strong> in each iteration, and there&#39;s also a handy library method to calculate the rune length<br><br>As an example:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;unicode/utf8&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">const</span> sample = <span class="string">&quot;汽,車&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> index, runeValue := <span class="keyword">range</span> sample&#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;%#U starts at byte position %d and occupies %d bytes \n&quot;</span>, runeValue, index, utf8.RuneLen(runeValue))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br>The result will be as follows:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">U+6C7D &#x27;汽&#x27; starts at byte position 0 and occupies 3 bytes</span><br><span class="line">U+002C &#x27;,&#x27; starts at byte position 3 and occupies 1 bytes</span><br><span class="line">U+8ECA &#x27;車&#x27; starts at byte position 4 and occupies 3 bytes</span><br></pre></td></tr></table></figure></li></ol><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>Based on the above discovery, at this point, I have developed my own solution for creating chunks of string that solves my problem. Below is my solution:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;errors&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;unicode/utf8&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">chunksByte</span><span class="params">(s <span class="type">string</span>, chunkSize <span class="type">int</span>)</span></span> ([]<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(s) &lt;= chunkSize &#123;</span><br><span class="line"><span class="keyword">return</span> []<span class="type">string</span>&#123;s&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// We won&#x27;t create chunks, if we can&#x27;t safely do so based on the size of</span></span><br><span class="line">        <span class="comment">// first rune</span></span><br><span class="line"><span class="keyword">if</span> _, runeSize := utf8.DecodeRuneInString(s); runeSize &gt; chunkSize &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.New(<span class="string">&quot;rune size larger than chunk size&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">currentLen, currentStart := <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"></span><br><span class="line">chunks := <span class="built_in">make</span>([]<span class="type">string</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, ch := <span class="keyword">range</span> s &#123;</span><br><span class="line"><span class="keyword">if</span> runeLen := utf8.RuneLen(ch); runeLen != <span class="number">-1</span> &#123;</span><br><span class="line">currentLen += runeLen</span><br><span class="line"><span class="keyword">if</span> currentLen &gt; chunkSize &#123;</span><br><span class="line">chunks = <span class="built_in">append</span>(chunks, s[currentStart:i])</span><br><span class="line">currentLen = runeLen</span><br><span class="line">currentStart = i</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//always append the last chunk</span></span><br><span class="line">chunks = <span class="built_in">append</span>(chunks, s[currentStart:])</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> chunks, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This is by no means an efficient (or production ready) solution (so use&#x2F;copy it at your own risk), but it works for me.</p><p>Here are some of the test cases I created, and they all worked as expected.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(chunksByte(<span class="string">&quot;abcd&quot;</span>, <span class="number">2</span>))</span><br><span class="line">    <span class="comment">//[ab cd] &lt;nil&gt;</span></span><br><span class="line">    <span class="comment">//byte size for each item: [2 2]</span></span><br><span class="line"></span><br><span class="line">    fmt.Println(chunksByte(<span class="string">&quot;汽&quot;</span>, <span class="number">2</span>))</span><br><span class="line">    <span class="comment">//[] Can not create chunks, rune size larger than chunk</span></span><br><span class="line"></span><br><span class="line">    fmt.Println(chunksByte(<span class="string">&quot;汽a,車,車&quot;</span>, <span class="number">3</span>))</span><br><span class="line">    <span class="comment">//[汽 a, 車 , 車] &lt;nil&gt;</span></span><br><span class="line">    <span class="comment">//byte size for each item: [3 2 3 1 3]</span></span><br><span class="line"></span><br><span class="line">    fmt.Println(chunksByte(<span class="string">&quot;汽車,車&quot;</span>, <span class="number">3</span>))</span><br><span class="line">    <span class="comment">//[汽 車 , 車] &lt;nil&gt;</span></span><br><span class="line">    <span class="comment">//byte size for each item: [3 3 1 3]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h4><ul><li><a href="https://go.dev/blog/strings">https://go.dev/blog/strings</a></li><li><a href="https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses">https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Motivation-Need-to-split-text&quot;&gt;&lt;a href=&quot;#Motivation-Need-to-split-text&quot; class=&quot;headerlink&quot; title=&quot;Motivation: Need to split text&quot;&gt;&lt;/a&gt;Motivation: Need to split text&lt;/h3&gt;&lt;p&gt;I&amp;#39;m not a professional GO developer, but I do like GO, I have taught myself some Go by contributing to open source projects, and since then GO has become my language of choice for personal projects.&lt;/p&gt;
&lt;p&gt;Recently, I have encountered an interesting problem when working on one of my personal projects. For this project, I need to split a long text by &lt;strong&gt;byte&lt;/strong&gt; count. The eventual result is an array of strings in which each of element is &lt;strong&gt;less or equal&lt;/strong&gt; to the byte size that&amp;#39;s passed in.&lt;/p&gt;
&lt;h3 id=&quot;Naive-x2F-Wrong-approach-Split-by-number-of-characters&quot;&gt;&lt;a href=&quot;#Naive-x2F-Wrong-approach-Split-by-number-of-characters&quot; class=&quot;headerlink&quot; title=&quot;Naive&amp;#x2F;Wrong approach: Split by number of characters&quot;&gt;&lt;/a&gt;Naive&amp;#x2F;Wrong approach: Split by number of characters&lt;/h3&gt;</summary>
    
    
    
    
    <category term="GO" scheme="https://jiangsc.me/tags/GO/"/>
    
    <category term="Problem Solving" scheme="https://jiangsc.me/tags/Problem-Solving/"/>
    
    <category term="Split text" scheme="https://jiangsc.me/tags/Split-text/"/>
    
    <category term="Byte" scheme="https://jiangsc.me/tags/Byte/"/>
    
    <category term="Rune" scheme="https://jiangsc.me/tags/Rune/"/>
    
    <category term="String" scheme="https://jiangsc.me/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>Tips for using NeoVim as devtool - 2</title>
    <link href="https://jiangsc.me/2022/10/29/neovim-tricks-2/"/>
    <id>https://jiangsc.me/2022/10/29/neovim-tricks-2/</id>
    <published>2022-10-29T06:00:04.000Z</published>
    <updated>2022-10-29T10:04:52.013Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>This is the second article about NeoVim tips, if you are interested in the first one, please check <a href="/2022/05/21/neovim-tricks-1/">here</a></p></div><h3 id="Motivation-the-need-for-a-scratch-pad-within-NeoVim"><a href="#Motivation-the-need-for-a-scratch-pad-within-NeoVim" class="headerlink" title="Motivation: the need for a scratch pad within NeoVim"></a>Motivation: the need for a scratch pad within NeoVim</h3><p>Quite often in my daily work, I need to check some response that are in JSON or XML format. I could open VSCode and paste in and format whatever I got to readable format, or I could also find an online formatter to format these things. But, as a VIM user, I want to do it in a VIM way. The answer comes down to scratch buffer.</p><span id="more"></span><h3 id="Solution-Scratch-buffer-in-VIM"><a href="#Solution-Scratch-buffer-in-VIM" class="headerlink" title="Solution: Scratch buffer in VIM"></a>Solution: Scratch buffer in VIM</h3><p>A scratch buffer, well, is a scratch buffer.<br>In VIM, this means:</p><ol><li>It should only stay within memory, no actual file backing. So <code>setlocal buftype=nofile</code></li><li>It should not have swap file backing. So <code>setlocal noswapfile</code></li><li>It should be hidden from the list of buffers. So <code>set bufhidden=hide</code></li></ol><p>Based on these characteristics, we can create a VIM function that creates a scratch buffer:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">command! -nargs=<span class="number">0</span> Ns <span class="keyword">call</span> Newscratch()</span><br><span class="line">fun! Newscratch()</span><br><span class="line">  <span class="keyword">execute</span> <span class="string">&#x27;tabnew &#x27;</span></span><br><span class="line">  <span class="keyword">setlocal</span> buftype=nofile</span><br><span class="line">  <span class="keyword">setlocal</span> bufhidden=<span class="keyword">hide</span></span><br><span class="line">  <span class="keyword">setlocal</span> noswapfile</span><br><span class="line">endfun</span><br></pre></td></tr></table></figure><p>The above code declares a function called Newscratch in vim and map that function as Ns for short. Newscratch creates a new tab, and then set that tab as a scratch as defined above.</p><p>Since I&#39;m in the process of migrating my vim configuration into Lua for NeoVim, here is a Lua version of the same function</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">new_scratch</span><span class="params">()</span></span></span><br><span class="line">    vim.api.nvim_command(<span class="string">&#x27;tabnew&#x27;</span>)</span><br><span class="line">    <span class="comment">--[[</span></span><br><span class="line"><span class="comment">    [Parameters:</span></span><br><span class="line"><span class="comment">    [&#123;listed&#125; Sets &#x27;buflisted&#x27;</span></span><br><span class="line"><span class="comment">    [&#123;scratch&#125; Creates a &quot;throwaway&quot; scratch-buffer for temporary work (always</span></span><br><span class="line"><span class="comment">    [&#x27;nomodified&#x27;). Also sets &#x27;nomodeline&#x27; on the buffer.</span></span><br><span class="line"><span class="comment">    ]]</span></span><br><span class="line">    vim.api.nvim_create_buf(<span class="literal">false</span>, <span class="literal">true</span>)</span><br><span class="line">    vim.opt_local.buftype = <span class="string">&#x27;nofile&#x27;</span></span><br><span class="line">    vim.opt_local.bufhidden = <span class="string">&#x27;hide&#x27;</span></span><br><span class="line">    vim.opt_local.swapfile = <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Bonus-Enhanced-scratch-buffer"><a href="#Bonus-Enhanced-scratch-buffer" class="headerlink" title="Bonus: Enhanced scratch buffer"></a>Bonus: Enhanced scratch buffer</h3><p>I have found several issues with my initial implementation of scratch buffer, this is not an exhausted list, but the issues are:</p><ol><li>I sometimes want to save the content of the buffer to an actual file, I found myself doing that quite often, to a point I want to have it builtin to the scratch buffer.</li><li>Quite often, I want to format the content of the buffer, if it&#39;s xml, I want to use XML formatter, if JSON, use JSON formatter. I also need to decode base64 encoded strings to normal text, and it would be a good idea to just include this as well.</li><li>When JSON and XML files are large, they are quite difficult to navigate, I want to be able to use the vim builtin folding functionality to fold such files.</li></ol><p>These things listed above are what I use most often, therefore, I ended up enhancing my scratch buffer with some keymaps.<br>First up is the saving part, in VIM script, you can achieve it like this:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;buffer&gt;</span> <span class="symbol">&lt;silent&gt;</span> ,s :<span class="keyword">execute</span>(<span class="string">&#x27;:file scratch_&#x27;</span>) .. <span class="built_in">localtime</span>() .. (&amp;ft != <span class="string">&#x27;&#x27;</span> ? <span class="string">&#x27;.&#x27;</span> .. &amp;ft : <span class="string">&#x27;&#x27;</span>)<span class="symbol">&lt;cr&gt;</span><span class="symbol">&lt;bar&gt;</span>:<span class="keyword">set</span> buftype= swapfile<span class="symbol">&lt;bar&gt;</span>:<span class="keyword">w</span><span class="symbol">&lt;cr&gt;</span></span><br></pre></td></tr></table></figure><p>The above code maps <code>,s</code> to saving the scratch file with localtime() (which returns unix timestamp) and appending the appropriate file format based on the <code>&amp;ft</code> variable, it also reset the buffer type so subsequent changes can be saved to the file.</p><p>Next, I added the ability to format, this is done through external tools: for JSON, I used <code>jq</code>; for XML, I used <code>xmllint</code>. Both of these software are open source.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;buffer&gt;</span> ,<span class="keyword">xm</span> :%!xmllint --format - <span class="symbol">&lt;cr&gt;</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;buffer&gt;</span> ,ff :%!jq . <span class="symbol">&lt;cr&gt;</span></span><br><span class="line"><span class="keyword">vmap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;buffer&gt;</span> ,dc :!base64 -d <span class="symbol">&lt;cr&gt;</span></span><br></pre></td></tr></table></figure><p>As you can see, I mapped <code>,ff</code> to jq formatting and <code>,xm</code> to XML formatting, <code>,dc</code> is mapped to base64 decoding.</p><p>Last but not least is the folding, I eventually combined the formatting with the folding, so I will present the updated version of the above code that included folding:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;buffer&gt;</span> ,ff :%!jq . <span class="symbol">&lt;cr&gt;</span><span class="symbol">&lt;bar&gt;</span>:<span class="keyword">setf</span> json<span class="symbol">&lt;bar&gt;</span> <span class="keyword">set</span> foldmethod=expr<span class="symbol">&lt;bar&gt;</span><span class="keyword">set</span> foldexpr=nvim_treesitter#foldexpr()<span class="symbol">&lt;bar&gt;</span>:redraw!<span class="symbol">&lt;bar&gt;</span>:<span class="keyword">foldopen</span><span class="symbol">&lt;cr&gt;</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;buffer&gt;</span> ,<span class="keyword">xm</span> :%!xmllint --format - <span class="symbol">&lt;cr&gt;</span><span class="symbol">&lt;bar&gt;</span>:<span class="keyword">setf</span> html<span class="symbol">&lt;bar&gt;</span>:<span class="keyword">set</span> foldmethod=expr<span class="symbol">&lt;bar&gt;</span><span class="keyword">set</span> foldexpr=nvim_treesitter#foldexpr()<span class="symbol">&lt;bar&gt;</span>:redraw!<span class="symbol">&lt;cr&gt;</span></span><br></pre></td></tr></table></figure><p>This folding uses nvim_treesitter to fold, so a prerequisite is to have treesitter installed.</p><p>Once I solved the three issues I faced, I combined the functionality into the VIM function I created, the final version is as below:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">command! -nargs=<span class="number">0</span> Ns <span class="keyword">call</span> Newscratch()</span><br><span class="line">fun! Newscratch()</span><br><span class="line">  <span class="keyword">execute</span> <span class="string">&#x27;tabnew &#x27;</span></span><br><span class="line">  <span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;buffer&gt;</span> <span class="symbol">&lt;Leader&gt;</span>ff :%!jq . <span class="symbol">&lt;cr&gt;</span><span class="symbol">&lt;bar&gt;</span>:<span class="keyword">setf</span> json<span class="symbol">&lt;bar&gt;</span> <span class="keyword">set</span> foldmethod=expr<span class="symbol">&lt;bar&gt;</span><span class="keyword">set</span> foldexpr=nvim_treesitter#foldexpr()<span class="symbol">&lt;bar&gt;</span>:redraw!<span class="symbol">&lt;bar&gt;</span>:<span class="keyword">foldopen</span><span class="symbol">&lt;cr&gt;</span></span><br><span class="line">  <span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;buffer&gt;</span> ,ff :%!jq . <span class="symbol">&lt;cr&gt;</span><span class="symbol">&lt;bar&gt;</span>:<span class="keyword">setf</span> json<span class="symbol">&lt;bar&gt;</span> <span class="keyword">set</span> foldmethod=expr<span class="symbol">&lt;bar&gt;</span><span class="keyword">set</span> foldexpr=nvim_treesitter#foldexpr()<span class="symbol">&lt;bar&gt;</span>:redraw!<span class="symbol">&lt;bar&gt;</span>:<span class="keyword">foldopen</span><span class="symbol">&lt;cr&gt;</span></span><br><span class="line">  <span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;buffer&gt;</span> ,<span class="keyword">xm</span> :%!xmllint --format - <span class="symbol">&lt;cr&gt;</span><span class="symbol">&lt;bar&gt;</span>:<span class="keyword">setf</span> html<span class="symbol">&lt;bar&gt;</span>:<span class="keyword">set</span> foldmethod=expr<span class="symbol">&lt;bar&gt;</span><span class="keyword">set</span> foldexpr=nvim_treesitter#foldexpr()<span class="symbol">&lt;bar&gt;</span>:redraw!<span class="symbol">&lt;cr&gt;</span></span><br><span class="line">  <span class="keyword">nnoremap</span> <span class="symbol">&lt;buffer&gt;</span> <span class="symbol">&lt;silent&gt;</span> ,s :<span class="keyword">execute</span>(<span class="string">&#x27;:file scratch_&#x27;</span>) .. <span class="built_in">localtime</span>() .. (&amp;ft != <span class="string">&#x27;&#x27;</span> ? <span class="string">&#x27;.&#x27;</span> .. &amp;ft : <span class="string">&#x27;&#x27;</span>)<span class="symbol">&lt;cr&gt;</span><span class="symbol">&lt;bar&gt;</span>:<span class="keyword">set</span> buftype= swapfile<span class="symbol">&lt;bar&gt;</span>:<span class="keyword">w</span><span class="symbol">&lt;cr&gt;</span></span><br><span class="line">  <span class="keyword">nnoremap</span> <span class="symbol">&lt;buffer&gt;</span> <span class="symbol">&lt;silent&gt;</span> ,n :<span class="keyword">execute</span>(<span class="string">&#x27;:file ~/notes/note_&#x27;</span>) .. <span class="built_in">localtime</span>() .. (&amp;ft != <span class="string">&#x27;&#x27;</span> ? <span class="string">&#x27;.&#x27;</span> .. &amp;ft : <span class="string">&#x27;&#x27;</span>)<span class="symbol">&lt;cr&gt;</span><span class="symbol">&lt;bar&gt;</span>:<span class="keyword">set</span> buftype= swapfile<span class="symbol">&lt;bar&gt;</span>:<span class="keyword">w</span><span class="symbol">&lt;cr&gt;</span></span><br><span class="line">  <span class="keyword">vmap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;buffer&gt;</span> ,dc :!base64 -d <span class="symbol">&lt;cr&gt;</span></span><br><span class="line">  <span class="keyword">setlocal</span> buftype=nofile</span><br><span class="line">  <span class="keyword">setlocal</span> bufhidden=<span class="keyword">hide</span></span><br><span class="line">  <span class="keyword">setlocal</span> noswapfile</span><br><span class="line">  <span class="keyword">setlocal</span> wrap</span><br><span class="line">endfun</span><br></pre></td></tr></table></figure><h3 id="Future-Improvements"><a href="#Future-Improvements" class="headerlink" title="Future Improvements"></a>Future Improvements</h3><p>I&#39;m actually quite happy with what I have achieved with the script I wrote above. I do acknowledge there are several things that can be improved, those are on my wishlist, and I do not have a way to achieve them at the moment:</p><ol><li>Format file upon pasting based on the file type detection. -- This is my most wanted feature, but question is how will you be able to know the file type without a file extension, probably will never be able to achieve.</li><li>Scratch buffer that can be opened within a float window within VIM.  -- This is achievable, but may not have too much value, maybe can do that later.</li><li>Split things into function. -- This is probably really necessary, but for now, I will just leave as is. Maybe will convert to function when I have time.</li></ol>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;This is the second article about NeoVim tips, if you are interested in the first one, please check &lt;a href=&quot;/2022/05/21/neovim-tricks-1/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;Motivation-the-need-for-a-scratch-pad-within-NeoVim&quot;&gt;&lt;a href=&quot;#Motivation-the-need-for-a-scratch-pad-within-NeoVim&quot; class=&quot;headerlink&quot; title=&quot;Motivation: the need for a scratch pad within NeoVim&quot;&gt;&lt;/a&gt;Motivation: the need for a scratch pad within NeoVim&lt;/h3&gt;&lt;p&gt;Quite often in my daily work, I need to check some response that are in JSON or XML format. I could open VSCode and paste in and format whatever I got to readable format, or I could also find an online formatter to format these things. But, as a VIM user, I want to do it in a VIM way. The answer comes down to scratch buffer.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Vim" scheme="https://jiangsc.me/tags/Vim/"/>
    
    <category term="Tips" scheme="https://jiangsc.me/tags/Tips/"/>
    
    <category term="NeoVim" scheme="https://jiangsc.me/tags/NeoVim/"/>
    
    <category term="nvim" scheme="https://jiangsc.me/tags/nvim/"/>
    
  </entry>
  
  <entry>
    <title>Android Emulator Tips -- Simulate Mobile Carrier</title>
    <link href="https://jiangsc.me/2022/10/05/android-emulator-carrier-simulation/"/>
    <id>https://jiangsc.me/2022/10/05/android-emulator-carrier-simulation/</id>
    <published>2022-10-05T09:13:05.000Z</published>
    <updated>2022-10-29T05:59:16.315Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>I&#39;m not an Android developer, but I do work with Android applications which means I have to work with Android Studio and Android emulator quite often. Recently, I encountered a quite interesting problem which prompt me to write this post and hopefully can help someone in the future.</p><p><strong>Why?</strong></p><p>Because I need to identify where the user of the mobile app is located and provide different content to the user based on their location.</p><p><strong>How?</strong></p><p>There are definitely several ways to do so, one obvious way is to use the IP address. However, with the growing use of VPN, this is definitely not the most reliable option.</p><p>The other option that comes up is to identify through the mobile carrier. If you are not familiar with telco or mobile networks, I will provide a brief background next.</p><p><strong>MCCs and MNCs</strong><br>Each mobile network operator (or carrier) can be uniquely identified by using a combination of MCC (mobile country code) and MNC(mobile network code). More information on this on <a href="https://en.wikipedia.org/wiki/Mobile_country_code" title="Mobile Country Code - Wikipedia">Wikipedia</a>. What this means is that, you can usually reliably identify where the user is from by looking at their mobile carrier&#39;s MCC code.</p><p>Usually, you would have to translate the MCC code to a country code on your own but it turns out in Android you don&#39;t have to do the translation yourself. Instead, you can directly use <a href="https://developer.android.com/reference/android/telephony/TelephonyManager#getNetworkCountryIso()" title="getNetworkCountryIso API">this</a> API which will give you an ISO country code in 2 letters. You can then do whatever you want with this country code, pass this through a header to a server or the likes.</p><p>Once you have implemented this using getNetworkCountryIso, you will realize it is almost impossible to test or verify if this functionality will actually work as expected. One of the easiest way is to provide a debug menu within the app (in debug mode) and then mock different countries, this is the obviously the most efficient and cost effective way.</p><p>If in reality, a debug menu to mock countries is not something you can achieve, then you will have to use the emulator. This is what the rest of this post will be about, and hopefully this post can help you with your solution.</p><span id="more"></span><div class="note info"><p><strong>The problem to solve is to &quot;change&quot; the carrier in the Android emulator.</strong></p></div><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>The solution I came up with involves changing one of Android system image, only one file change is strictly necessary.</p><p>In Linux and&#x2F;or MacOS systems, the file to change sits under <code>$ANDROID_SDK_ROOT/system-images/android-33/google_apis/x86_64/data/misc/modem_simulator/etc/modem_simulator/files/numeric_operator.xml</code></p><p>What you would need to do is to add the MCC and MNC combo to the file and give it whatever name you want.</p><p>In Linux, system image location:<br><code>$ANDROID_SDK_ROOT/system-images/android-$sdk_version/google_apis/x86_64</code></p><p>File to change or copy?</p><ul><li>$ANDROID_SDK_ROOT&#x2F;system-images&#x2F;android-33&#x2F;google_apis&#x2F;x86_64&#x2F;data&#x2F;misc&#x2F;modem_simulator&#x2F;iccprofile_for_sim0.xml Line 79, CIMI, replace first three digit with MCC you want.</li><li>$ANDROID_SDK_ROOT&#x2F;system-images&#x2F;android-33&#x2F;google_apis&#x2F;x86_64&#x2F;data&#x2F;misc&#x2F;modem_simulator&#x2F;etc&#x2F;modem_simulator&#x2F;files&#x2F;numeric_operator.xml, add the newly added MCC to this file, give it a name</li></ul><p>Verify:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">adb shell getprop|grep gsm</span><br><span class="line">emulator @$(emulator -list-avds|<span class="built_in">head</span>) \</span><br><span class="line">    -logcat <span class="string">&#x27;*:silent&#x27;</span> \ </span><br><span class="line">    -no-snapshot \</span><br><span class="line">    -writable-system \</span><br><span class="line">    -no-boot-anim</span><br></pre></td></tr></table></figure><p>Once the emulator has started, you can check the carrier has changed to the one you have chosen.</p><h3 id="Another-way"><a href="#Another-way" class="headerlink" title="Another way"></a>Another way</h3><p>Android emulator allow you to pass the iccprofile at boot time as well, so you can copy the iccprofile_for_sim0 to the location you want and start the emulator as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">adb shell getprop|grep gsm</span><br><span class="line">emulator @$(emulator -list-avds|<span class="built_in">head</span>) \</span><br><span class="line">    -logcat <span class="string">&#x27;*:silent&#x27;</span> \ </span><br><span class="line">    -no-snapshot \</span><br><span class="line">    -writable-system \</span><br><span class="line">    -iccprofile LOCATION_TO_YOUR_ICC_PROFILE</span><br><span class="line">    -no-boot-anim</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Background&quot;&gt;&lt;a href=&quot;#Background&quot; class=&quot;headerlink&quot; title=&quot;Background&quot;&gt;&lt;/a&gt;Background&lt;/h3&gt;&lt;p&gt;I&amp;#39;m not an Android developer, but I do work with Android applications which means I have to work with Android Studio and Android emulator quite often. Recently, I encountered a quite interesting problem which prompt me to write this post and hopefully can help someone in the future.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Because I need to identify where the user of the mobile app is located and provide different content to the user based on their location.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are definitely several ways to do so, one obvious way is to use the IP address. However, with the growing use of VPN, this is definitely not the most reliable option.&lt;/p&gt;
&lt;p&gt;The other option that comes up is to identify through the mobile carrier. If you are not familiar with telco or mobile networks, I will provide a brief background next.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MCCs and MNCs&lt;/strong&gt;&lt;br&gt;Each mobile network operator (or carrier) can be uniquely identified by using a combination of MCC (mobile country code) and MNC(mobile network code). More information on this on &lt;a href=&quot;https://en.wikipedia.org/wiki/Mobile_country_code&quot; title=&quot;Mobile Country Code - Wikipedia&quot;&gt;Wikipedia&lt;/a&gt;. What this means is that, you can usually reliably identify where the user is from by looking at their mobile carrier&amp;#39;s MCC code.&lt;/p&gt;
&lt;p&gt;Usually, you would have to translate the MCC code to a country code on your own but it turns out in Android you don&amp;#39;t have to do the translation yourself. Instead, you can directly use &lt;a href=&quot;https://developer.android.com/reference/android/telephony/TelephonyManager#getNetworkCountryIso()&quot; title=&quot;getNetworkCountryIso API&quot;&gt;this&lt;/a&gt; API which will give you an ISO country code in 2 letters. You can then do whatever you want with this country code, pass this through a header to a server or the likes.&lt;/p&gt;
&lt;p&gt;Once you have implemented this using getNetworkCountryIso, you will realize it is almost impossible to test or verify if this functionality will actually work as expected. One of the easiest way is to provide a debug menu within the app (in debug mode) and then mock different countries, this is the obviously the most efficient and cost effective way.&lt;/p&gt;
&lt;p&gt;If in reality, a debug menu to mock countries is not something you can achieve, then you will have to use the emulator. This is what the rest of this post will be about, and hopefully this post can help you with your solution.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Android" scheme="https://jiangsc.me/tags/Android/"/>
    
    <category term="Emulator" scheme="https://jiangsc.me/tags/Emulator/"/>
    
    <category term="Android Development" scheme="https://jiangsc.me/tags/Android-Development/"/>
    
    <category term="Carrier Simulation" scheme="https://jiangsc.me/tags/Carrier-Simulation/"/>
    
  </entry>
  
  <entry>
    <title>Linux user notes -- open Zoom meetings in one click</title>
    <link href="https://jiangsc.me/2022/09/17/linux-user-notes-2/"/>
    <id>https://jiangsc.me/2022/09/17/linux-user-notes-2/</id>
    <published>2022-09-17T08:34:38.000Z</published>
    <updated>2022-09-17T11:40:07.759Z</updated>
    
    <content type="html"><![CDATA[<p>It&#39;s been almost two years since I wrote <a href="/2020/12/26/Automating-Zoom-with-Alfred-and-Apple-Scripts/">the post</a> on how to automate Zoom with Alfred and Apple Scripts. Sadly enough, the situation has not improved at all, you still have to click on the link for the Zoom meeting and then wait for it to launch your Zoom app.</p><h3 id="The-need-for-a-simple-way-to-join-Zoom-meetings-on-Linux"><a href="#The-need-for-a-simple-way-to-join-Zoom-meetings-on-Linux" class="headerlink" title="The need for a simple way to join Zoom meetings (on Linux)"></a>The need for a simple way to join Zoom meetings (on Linux)</h3><div class="note info"><p>The goal is to open Zoom directly and join the meeting without going through the browser.</p></div><p>I have started using my Linux laptop to join a Zoom meeting regularly recently, and I simply can&#39;t tolerate having to click on the same link over and over again each time I want to join the meeting -- I just wish there is a simpler way to open Zoom with one click without going through the browser.</p><span id="more"></span><h3 id="The-magic-of-xdg-open"><a href="#The-magic-of-xdg-open" class="headerlink" title="The magic of xdg-open"></a>The magic of xdg-open</h3><div class="note info"><p><strong>xdg-open</strong> -- opens a file or URL in the user&#39;s preferred application</p></div><p>If you are a Linux user, you might be already familiar with this <strong>xdg-open</strong> thing. To put it in short, if you give <strong>xdg-open</strong> uses the default application that is registered in the system to handle the URL or link or files that was passed to it.</p><p>As an example, if you run <code>xdg-open mailto:example@exmaple.com</code> in a terminal, this will open the email application that was registered on your system to handle email, note the <strong>mailto</strong> is a URL schema for emails. There is another command called <code>xdg-settings</code>. If you are interested in checking what is your current default browser, you can do <code>xdg-settings get default-web-browser</code></p><p>You may wonder how would this has anything to do with opening Zoom on Linux. As a matter of fact, when you click on the Zoom meeting link, it will take you to a web page, which uses some JavaScript under the hood and opens the URL that Zoom application registers to in Linux (and this is why you will usually get a pop-up on after you click on the zoom link which will you if you want to open the link with <strong>xdg-open</strong>).</p><p>It turns out this scheme is the same across both Linux and MacOS (perhaps it&#39;s the same across mobile and Windows as well). You can verify this by running <code>xdg-settings get default-url-scheme-handler zoommtg</code> in a terminal. If you had Zoom installed on your machine, the result of this command should be <strong>Zoom.desktop</strong>.</p><h3 id="Understanding-the-Zoom-URL-scheme"><a href="#Understanding-the-Zoom-URL-scheme" class="headerlink" title="Understanding the Zoom URL scheme"></a>Understanding the Zoom URL scheme</h3><div class="note info"><p>The zoom url scheme starts with zoommtg, it contains the information of the meeting id and the password</p></div><p>The Zoom URL scheme is not that difficult to understand, if you want to use the URL scheme to join a meeting, you can use the following:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zoommtg://zoom.us/join?confno=&#123;confno&#125;&amp;pwd=&#123;pwd&#125;`</span><br></pre></td></tr></table></figure><p>where the confno is the number part of the Zoom meeting link you received and the pwd part is whatever comes after the pwd part in the URL.</p><p>Now is the time to combine <code>xdg-open</code> and the URL scheme, you can do something like <code>xdg-open zoommtg://zoom.us/join?confno=123456&amp;pwd=65432</code> in the terminal. Note that using it like that will start Zoom in the current terminal, meaning you won&#39;t be able to do anything in the current terminal which is less than ideal. The correct way to open zoom in the background would be <code>(xdg-open zoommtg://zoom.us/join?confno=123456&amp;pwd=65432 &amp;)</code></p><h3 id="Opening-Zoom-without-browser"><a href="#Opening-Zoom-without-browser" class="headerlink" title="Opening Zoom without browser"></a>Opening Zoom without browser</h3><p>Now that we are clear on the Zoom scheme, we can think of several different ways to open Zoom quickly: </p><div class="tabs" id="solutions"><ul class="nav-tabs"><li class="tab active"><a href="#solutions-1">Solution 1: Use alias</a></li><li class="tab"><a href="#solutions-2">Solution 2: Polybar with rofi</a></li></ul><div class="tab-content"><div class="tab-pane active" id="solutions-1"><p>This is definitely a quick and cheap way to achieve what I wanted, it is as simple as adding something like this to my .zshrc or wherever I put my aliases:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> meeting=<span class="string">&quot;xdg-open zoommtg://zoom.us/join?confno=123456&amp;pwd=654321&quot;</span></span><br></pre></td></tr></table></figure><p>The issue with this way is obvious, it will be a bit troublesome to add different meetings, you will end up creating a <strong>lot</strong> of aliases for meetings which is not something I&#39;m willing to spend time on.</p></div><div class="tab-pane" id="solutions-2"><div class="note info"><p>This solution requires <a href="https://github.com/polybar/polybar">polybar</a> and <a href="https://github.com/davatorium/rofi">rofi</a></p></div><p>This is the solution that I went with, it is a bit more setup work at the beginning, but I&#39;m quite happy with it.</p><p>The first thing I did was creating a file called <code>.zoom_meetings.conf</code> in my home directory. Inside this file, I have something like this</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Example zoommtg://zoom.us/join?confno=123456&amp;pwd=654321</span><br></pre></td></tr></table></figure><p>Next step is to create a script in where you put your rofi config, as an example, I put it in <code>.config/rofi/zoom/launcher.sh</code></p><p>This file will have the following: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xdg-open $( <span class="built_in">cat</span> ~/.zoom_meetings.conf | rofi -dmenu -p <span class="string">&#x27;Select Zoom meeting&#x27;</span> | <span class="built_in">cut</span> --fields=2 --delimiter=<span class="string">&quot; &quot;</span>) &amp; <span class="built_in">disown</span></span><br></pre></td></tr></table></figure><p>This is a quite straightforward script, what it does is to open the content of the conf file, and pipe it to rofi, and then use cut to get the second part of that line which is the URL schema link</p><p>Once we get this file ready, we will start adding an icon to polybar as a shortcut, here&#39;s what I did:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[module/launcher]</span></span><br><span class="line"><span class="attr">type</span> = custom/text</span><br><span class="line"></span><br><span class="line"><span class="attr">content</span> = 異</span><br><span class="line"><span class="attr">content-background</span> = black</span><br><span class="line"><span class="attr">content-foreground</span> = green</span><br><span class="line"></span><br><span class="line"><span class="attr">click-left</span> = ~/.config/rofi/zoom/launcher.sh</span><br></pre></td></tr></table></figure><p>After you reload your polybar, click on the 異, this will bring you the rofi, with the links in your <code>.zoom_meetings.conf</code> file listed, you can choose to click on them or use arrow key to navigate and press enter. You will join the meeting immediately without going through the browser.</p><p>Obviously, there are several improvements that can be done for this solution as well. Here are some of them, they are order by the difficulty to achieve</p><ul><li>Instead of saving the URL scheme link, it would be easier to save the actual zoom link, and do some URL transformation on the fly. -- this is probably only achievable with some actual coding.</li><li>Instead of creating a config file, grab the zoom links from online (maybe Google Calendar) or something? (This is probably not. -- this is probably only achievable with some actual coding.</li></ul></div></div></div><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><ul><li><a href="https://github.com/polybar/polybar/wiki/Module:-text"> polybar documentation </a></li><li><a href="https://github.com/davatorium/rofi/blob/next/doc/rofi.1.markdown"> rofi documentation </a></li><li><a href="https://wiki.archlinux.org/title/Xdg-utils#xdg-open"> xdg-open </a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;It&amp;#39;s been almost two years since I wrote &lt;a href=&quot;/2020/12/26/Automating-Zoom-with-Alfred-and-Apple-Scripts/&quot;&gt;the post&lt;/a&gt; on how to automate Zoom with Alfred and Apple Scripts. Sadly enough, the situation has not improved at all, you still have to click on the link for the Zoom meeting and then wait for it to launch your Zoom app.&lt;/p&gt;
&lt;h3 id=&quot;The-need-for-a-simple-way-to-join-Zoom-meetings-on-Linux&quot;&gt;&lt;a href=&quot;#The-need-for-a-simple-way-to-join-Zoom-meetings-on-Linux&quot; class=&quot;headerlink&quot; title=&quot;The need for a simple way to join Zoom meetings (on Linux)&quot;&gt;&lt;/a&gt;The need for a simple way to join Zoom meetings (on Linux)&lt;/h3&gt;&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;The goal is to open Zoom directly and join the meeting without going through the browser.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;I have started using my Linux laptop to join a Zoom meeting regularly recently, and I simply can&amp;#39;t tolerate having to click on the same link over and over again each time I want to join the meeting -- I just wish there is a simpler way to open Zoom with one click without going through the browser.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Notes" scheme="https://jiangsc.me/tags/Notes/"/>
    
    <category term="Automation" scheme="https://jiangsc.me/tags/Automation/"/>
    
    <category term="Zoom" scheme="https://jiangsc.me/tags/Zoom/"/>
    
    <category term="Linux" scheme="https://jiangsc.me/tags/Linux/"/>
    
    <category term="xdg-open" scheme="https://jiangsc.me/tags/xdg-open/"/>
    
    <category term="polybar" scheme="https://jiangsc.me/tags/polybar/"/>
    
    <category term="rofi" scheme="https://jiangsc.me/tags/rofi/"/>
    
  </entry>
  
  <entry>
    <title>Linux user notes -- dual monitor hot plug</title>
    <link href="https://jiangsc.me/2022/07/22/linux-user-notes-1/"/>
    <id>https://jiangsc.me/2022/07/22/linux-user-notes-1/</id>
    <published>2022-07-22T22:04:07.000Z</published>
    <updated>2022-08-28T03:28:17.482Z</updated>
    
    <content type="html"><![CDATA[<p>As a long time Linux user, I have to admit sometimes it is not easy to achieve some of the things that can be easily done in other OS (like macOS or Windows), but that one of the things I enjoy about Linux as well -- you need to force yourself to learn something, and once you&#39;ve achieved it, you will learn from it and then realize how powerful Linux is. Anyway, for me, this had been one of the problems that had me troubled for a while -- using dual monitors, and have Linux automatically detect and extend desktops automatically.</p><h3 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h3><p>I use bspwm as my tiling window manager, and polybar as the &#39;bar&#39;. The problem I&#39;m trying to solve here is to have the laptop automatically detect monitor hot-plug and then extend the bars with different layout to the new monitor. And when I unplugged the external monitor, the system revert back to single monitor layout.</p><span id="more"></span><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>The easiest way to achieve this is using <a href="https://wiki.archlinux.org/title/udev">udev</a>. Based on my understanding, udev is similar to device manager in Windows. To solve this problem with udev, all you need to do is to create a new udev rule.</p><p>The first step is to find out which events are being triggered when the monitors are plugged&#x2F;unplugged. To achieve this, you can use the udev monitor: <code>udevadm monitor --environment --udev</code>. Plugin your monitor, and you will be able to see the events that are being triggered, as an example, here&#39;s what I got, when I plugged in my external monitor: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">UDEV  [5012.844939] change   /devices/pci0000:00/0000:00:02.0/drm/card0 (drm)</span><br><span class="line">ACTION=change</span><br><span class="line">DEVPATH=/devices/pci0000:00/0000:00:02.0/drm/card0</span><br><span class="line">SUBSYSTEM=drm</span><br><span class="line">HOTPLUG=1</span><br><span class="line">DEVNAME=/dev/dri/card0</span><br><span class="line">DEVTYPE=drm_minor</span><br><span class="line">SEQNUM=4288</span><br><span class="line">USEC_INITIALIZED=184807912</span><br><span class="line">ID_PATH=pci-0000:00:02.0</span><br><span class="line">ID_PATH_TAG=pci-0000_00_02_0</span><br><span class="line">ID_FOR_SEAT=drm-pci-0000_00_02_0</span><br><span class="line">DISPLAY=:0</span><br><span class="line">XAUTHORITY=/home/user/.Xauthority</span><br><span class="line">MAJOR=226</span><br><span class="line">MINOR=0</span><br><span class="line">DEVLINKS=/dev/dri/by-path/pci-0000:00:02.0-card</span><br><span class="line">TAGS=:master-of-seat:seat:uaccess:mutter-device-disable-kms-modifiers:</span><br><span class="line">CURRENT_TAGS=:master-of-seat:seat:uaccess:mutter-device-disable-kms-modifiers:</span><br></pre></td></tr></table></figure><p>Next, we are going to create the rules for this udev event. So we create a new file under <code>/etc/udev/rules.d</code> folder, in this case I will call this file <code>/etc/udev/rules.d/95-hdmi-plug.rules</code>, and here&#39;s the content of the file</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ACTION==&quot;change&quot;, SUBSYSTEM==&quot;drm&quot;, KERNEL==&quot;card0&quot; ENV&#123;DISPLAY&#125;=&quot;:0&quot;, ENV&#123;XAUTHORITY&#125;=&quot;/home/kevin/.Xauthority&quot;, RUN+=&quot;/home/user/.monitor-hot-plug.sh&quot;</span><br></pre></td></tr></table></figure><p>Notice how I matched the event: I used <code>ACTION==&quot;change&quot;, SUBSYSTEM==&quot;drm&quot;, KERNEL==&quot;card0&quot;</code>, this is what comes directly from the monitoring after plugging in the external monitor. The ENV part is just setting some environment variables, which is necessary for X11. For the run part, I put in a script that is tailored to my need, it is quite short and simple, just telling xrandr to set the monitor positioning (probably not a best practice to hard code the positioning though): </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /usr/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">connect</span></span>()&#123;</span><br><span class="line">  xrandr --output eDP1 --mode 1920x1080 --pos 0x1080 --rotate normal --output HDMI1 --primary --mode 1920x1080 --pos 0x0 --rotate normal</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">disconnect</span></span>()&#123;</span><br><span class="line">  xrandr --output HDMI1 --off</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xrandr | grep <span class="string">&quot;HDMI1 connected&quot;</span> &amp;&gt; /dev/null &amp;&amp; connect || disconnect</span><br><span class="line"></span><br><span class="line">/bin/bspc wm -r &amp; <span class="built_in">disown</span></span><br></pre></td></tr></table></figure><p>At this point, we can start testing. You can definitely plug and remove the HDMI cable multiple times to test if it works, but that is a bit time consuming. We can use <code>sudo udevadm test /sys/class/drm/card0</code> to see if the config file is correct.</p><p>Once you have done the necessary testing, it is important to reload the udev rules into the running system <code>sudo udevadm control --reload-rules</code></p><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>This article explore how udev rules can be utilized to manage hot plug of external monitors. There are also some other different uses for this tool, such as detecting external mouse, external video cam etc. Use the references below to know more.</p><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><ul><li><a href="https://wiki.archlinux.org/title/udev">Arch Linux Wiki on Udev</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;As a long time Linux user, I have to admit sometimes it is not easy to achieve some of the things that can be easily done in other OS (like macOS or Windows), but that one of the things I enjoy about Linux as well -- you need to force yourself to learn something, and once you&amp;#39;ve achieved it, you will learn from it and then realize how powerful Linux is. Anyway, for me, this had been one of the problems that had me troubled for a while -- using dual monitors, and have Linux automatically detect and extend desktops automatically.&lt;/p&gt;
&lt;h3 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h3&gt;&lt;p&gt;I use bspwm as my tiling window manager, and polybar as the &amp;#39;bar&amp;#39;. The problem I&amp;#39;m trying to solve here is to have the laptop automatically detect monitor hot-plug and then extend the bars with different layout to the new monitor. And when I unplugged the external monitor, the system revert back to single monitor layout.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Notes" scheme="https://jiangsc.me/tags/Notes/"/>
    
    <category term="Linux" scheme="https://jiangsc.me/tags/Linux/"/>
    
    <category term="Manjaro Linux" scheme="https://jiangsc.me/tags/Manjaro-Linux/"/>
    
    <category term="Dual monitor" scheme="https://jiangsc.me/tags/Dual-monitor/"/>
    
    <category term="systemd" scheme="https://jiangsc.me/tags/systemd/"/>
    
    <category term="udev" scheme="https://jiangsc.me/tags/udev/"/>
    
  </entry>
  
  <entry>
    <title>Tips for using NeoVim as devtool - 1</title>
    <link href="https://jiangsc.me/2022/05/21/neovim-tricks-1/"/>
    <id>https://jiangsc.me/2022/05/21/neovim-tricks-1/</id>
    <published>2022-05-21T03:14:02.000Z</published>
    <updated>2022-10-29T10:07:51.678Z</updated>
    
    <content type="html"><![CDATA[<p>As a developer, one of the most important things is to find the right tool to write code with. To me, that means this tool needs to be lightweight, portable, and most importantly reliable.</p><h3 id="Why-VSCode-is-not-for-me"><a href="#Why-VSCode-is-not-for-me" class="headerlink" title="Why VSCode is not for me"></a>Why VSCode is not for me</h3><p>VSCode, aka Visual Studio Code, is a code editor developed by Microsoft. It is based on top of the Atom editor that was previously developed by GitHub. As a full stack developer whose main language is JavaScript&#x2F;TypeScript, I was told to use VSCode when I joined the company. However, as a long-time vim user, I still use the vim mappings when I am using VSCode. This is all done through plugin&#x2F;extensions. This seems to be okay at first, but over time, I really find VSCode annoying to use and I simply can&#39;t tolerate it.</p><p>The first thing is that contrary to most popular belief, VSCode is <strong>NOT</strong> an open source product. Yes, part of the source of VSCode <strong>is</strong> open-sourced, but the VSCode you downloaded from Microsoft website is not. They have put some proprietary stuff into the end product and I&#39;m not a big fan of that. There are ways to get around this, namely, there are several truly open source edition of VSCode, the one I used to use is called VSCodium, but then you will lose access to the extensions market provided by Microsoft.</p><p>Another thing that annoys me is that VSCode or any product that based on VSCode is just too slow and resource intensive -- they are just an electron app running on another Chromium based browser. Having one Chrome is enough for me, so thank you Microsoft (I tried to avoid electron based apps as much as possible, for example, I use web version of Teams, rather than the app one)</p><span id="more"></span><h3 id="How-NeoVim-x2F-Vim-fits-in"><a href="#How-NeoVim-x2F-Vim-fits-in" class="headerlink" title="How NeoVim&#x2F;Vim fits in"></a>How NeoVim&#x2F;Vim fits in</h3><p>I had been a long-time vim user, I first began using vim when I was studying computer science at the university. But I had never tried to use vim as my daily tool for software development before 2021. In February of 2021, we had a new dev joining my team. To my surprise, he was using vim (more precisely NeoVim) as his daily driver. This inspired me, and I started to explore ways to use VIM as well. At the time of this writing, I have been using NeoVim as my daily driver for more than a year now. To me, the experience has never been more pleasant. So I would just like to share a few tips on how I use it daily.</p><h3 id="Run-tests-without-leaving-vim"><a href="#Run-tests-without-leaving-vim" class="headerlink" title="Run tests without leaving vim"></a>Run tests without leaving vim</h3><p>Suppose you currently have a test file opened in you vim, and you would like to run all the tests within this file, what would you do?</p><div class="tabs" id="solutions"><ul class="nav-tabs"><li class="tab active"><a href="#solutions-1">Solution 1: Open a new terminal</a></li><li class="tab"><a href="#solutions-2">Solution 2: Run the command within vim itself</a></li><li class="tab"><a href="#solutions-3">Solution 3: Using Vim's terminal mode/Vim shortcut</a></li><li class="tab"><a href="#solutions-4">Final Solution</a></li></ul><div class="tab-content"><div class="tab-pane active" id="solutions-1"><p>I think most people would open a new window or a new split in Tmux and start the command <code>yarn test filename</code>. At least that was what I was doing when I first encountered this problem. Well, obviously, this is not the ideal solution, because this would be really interruptive, you would have to switch between either a different terminal or a Tmux window.</p></div><div class="tab-pane" id="solutions-2"><p>After several days of using solution 1, I was really tired of it. Switching between different terminal is just too slow and interruptive. So this is when I come to the second solution: in normal mode, use <code>:!yarn test %</code>. Okay, this works, I don&#39;t have to leave VIM each time I want to run the test. But now the problem is that running this command is blocking, meaning you can&#39;t edit the file while the test is running. This is fine if the test is not long or you are just running a single test using <code>it.only</code> or something like that. But if the text is long enough, it might be 2 or 3 minutes before you can do anything again, which is quite annoying to me.</p></div><div class="tab-pane" id="solutions-3"><p>Starting from Vim 8.0, Vim adds a built-in terminal mode, which is quite handy to use. Once I found this out, I started to use <code>:sp term://yarn test %</code>, this will create a new <strong>horizontal</strong> split and start a terminal that runs <code>yarn test %</code>, while the tests are running, you can still do whatever you want to do and will not be blocked by the testing itself.<br>Once the command is finished, you will see the command exit in that window.</p><p>This solution is almost perfect, except I use this command too frequently that typing this whole command becomes a pain. So I had to find some way to improve my experience. And this all comes down to mapping this command to something shorter (at least that was what I was thinking at first). So I added the following to my vimrc file <code>cmap rt!! !yarn test % &lt;CR&gt;</code> this saves lots of keystrokes, but still, I need to type it every single time I want to use it. I still feel there&#39;s space for improvements. </p></div><div class="tab-pane" id="solutions-4"><h3 id="Final-Solution-Key-mapping"><a href="#Final-Solution-Key-mapping" class="headerlink" title="Final Solution: Key mapping"></a>Final Solution: Key mapping</h3><p>Based on function 3.1, I started to think if I can map the command to a leader key, it turned out I definitely can, with this <code>map &lt;buffer&gt; &lt;silent&gt; &lt;nowait&gt; &lt;Leader&gt;rt :execute &#39;sp term://yarn test %&#39;&lt;CR&gt;</code></p></div></div></div><h3 id="Afterthoughts"><a href="#Afterthoughts" class="headerlink" title="Afterthoughts"></a>Afterthoughts</h3><p>There are several caveats with the above solution.<br>First, this mapping will exist in every file type which is not ideal, cause you don&#39;t want to use yarn to test a GO file for example. Therefore, I moved this command to a separate file under the <code>ftplugin</code> folder and call it <code>typescript_mappings.vim</code>.<br>Second, you will always have to locate the test file before you can run the test. This is not a deal breaker, but it is still not perfect. Usually you would refactor a simple function within a file and all you care about is whether the corresponding tests passes, you don&#39;t necessarily need to edit the file or care about where the file is. This prompts me to turn this whole thing into a vimscript function<br>Here goes the function I created: </p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;leader&gt;</span>T :Ft<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">exists</span>(<span class="string">&#x27;*FindTest&#x27;</span>)</span><br><span class="line">    <span class="keyword">finish</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line">command! -nargs=? Ft <span class="keyword">call</span> FindTest(<span class="symbol">&lt;q-args&gt;</span>)</span><br><span class="line">fun! FindTest(...)</span><br><span class="line">  <span class="keyword">set</span> path+=**</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> fileName = <span class="built_in">expand</span>(<span class="string">&#x27;%:t:r&#x27;</span>) . <span class="string">&#x27;.test.ts&#x27;</span></span><br><span class="line">  <span class="keyword">execute</span> <span class="string">&#x27;tabnew &#x27;</span></span><br><span class="line">  <span class="keyword">execute</span> <span class="string">&#x27;find &#x27;</span>. fileName</span><br><span class="line">  <span class="keyword">execute</span> <span class="string">&#x27;split term://yarn test &#x27;</span>. fileName . <span class="string">&#x27; --watch&#x27;</span></span><br><span class="line">endfun</span><br></pre></td></tr></table></figure><p>This function first set the look path to all the directories recursively, then it expand to the filename excluding the extension, then add .test.ts to it. After that, it opens a new tab, open the test file and then create a terminal, yarn test that file in watch mode.</p><p>I put this file under the ftplugin again, but one issue is that because the both the file found and the current file are of the same file type, this means the script will be sourced twice. So I had to put the <code>if exists</code> check. I map this command to <leader> T but you can tailor that to your liking.</p><p>Update Oct 2022: If you like this article, you may also want to check the second article in this series <a href="/2022/10/29/neovim-tricks-2/">here</a>, it is about scratch buffer in vim.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;As a developer, one of the most important things is to find the right tool to write code with. To me, that means this tool needs to be lightweight, portable, and most importantly reliable.&lt;/p&gt;
&lt;h3 id=&quot;Why-VSCode-is-not-for-me&quot;&gt;&lt;a href=&quot;#Why-VSCode-is-not-for-me&quot; class=&quot;headerlink&quot; title=&quot;Why VSCode is not for me&quot;&gt;&lt;/a&gt;Why VSCode is not for me&lt;/h3&gt;&lt;p&gt;VSCode, aka Visual Studio Code, is a code editor developed by Microsoft. It is based on top of the Atom editor that was previously developed by GitHub. As a full stack developer whose main language is JavaScript&amp;#x2F;TypeScript, I was told to use VSCode when I joined the company. However, as a long-time vim user, I still use the vim mappings when I am using VSCode. This is all done through plugin&amp;#x2F;extensions. This seems to be okay at first, but over time, I really find VSCode annoying to use and I simply can&amp;#39;t tolerate it.&lt;/p&gt;
&lt;p&gt;The first thing is that contrary to most popular belief, VSCode is &lt;strong&gt;NOT&lt;/strong&gt; an open source product. Yes, part of the source of VSCode &lt;strong&gt;is&lt;/strong&gt; open-sourced, but the VSCode you downloaded from Microsoft website is not. They have put some proprietary stuff into the end product and I&amp;#39;m not a big fan of that. There are ways to get around this, namely, there are several truly open source edition of VSCode, the one I used to use is called VSCodium, but then you will lose access to the extensions market provided by Microsoft.&lt;/p&gt;
&lt;p&gt;Another thing that annoys me is that VSCode or any product that based on VSCode is just too slow and resource intensive -- they are just an electron app running on another Chromium based browser. Having one Chrome is enough for me, so thank you Microsoft (I tried to avoid electron based apps as much as possible, for example, I use web version of Teams, rather than the app one)&lt;/p&gt;</summary>
    
    
    
    
    <category term="Vim" scheme="https://jiangsc.me/tags/Vim/"/>
    
    <category term="Tips" scheme="https://jiangsc.me/tags/Tips/"/>
    
    <category term="NeoVim" scheme="https://jiangsc.me/tags/NeoVim/"/>
    
    <category term="nvim" scheme="https://jiangsc.me/tags/nvim/"/>
    
  </entry>
  
  <entry>
    <title>Hide Phone Number when making calls</title>
    <link href="https://jiangsc.me/2022/03/06/hide-phone-number-when-making-calls/"/>
    <id>https://jiangsc.me/2022/03/06/hide-phone-number-when-making-calls/</id>
    <published>2022-03-06T04:43:57.000Z</published>
    <updated>2022-08-28T04:00:48.602Z</updated>
    
    <content type="html"><![CDATA[<div class="note danger"><h4 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h4><p>⚠ Hiding phone numbers may not be legal in some places, and even if you hide your number, you mobile operator <strong>WILL</strong> (of course) see your number. Use the method described in this article at your own risk!</p></div><span id="more"></span><p>In Android&#x2F;iOS, there is a way to hide your phone numbers on outgoing phone calls.</p><ul><li>For most Android phones, this setting is somewhere under <strong>Call Settings</strong> -&gt; <strong>Additional settings</strong> in the phone app. </li><li>In most countries, it is by law that the mobile network operator provide an option to hide your number. if you choose the <strong>Hide number</strong> options, you number will always be hidden. <em><strong>This is a setting at the operator level, meaning even people who have your info in their contacts will not be able to identify who you are.</strong></em></li><li>To most people, you would not want to hide your mobile number when calling someone you know. But you <strong>do</strong> want to do so, if you are calling someone you are not familiar with, a business for example.</li><li>Luckily, there is a way to hide your phone numbers temporarily, if you wish to do so. It differs by country though:<ul><li>In the U.S, if you want to hide your number, you can add <code>*67</code> before the number you are calling.</li><li>In New Zealand, you can use<ul><li>when <code>*31#</code> is added to the number you are trying to call, you number will be shown, disregarding the setting.</li><li>when <code>#31#</code> is added to the number you are trying to call, you number will be hidden, disregarding the setting</li></ul></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;note danger&quot;&gt;&lt;h4 id=&quot;Warning&quot;&gt;&lt;a href=&quot;#Warning&quot; class=&quot;headerlink&quot; title=&quot;Warning&quot;&gt;&lt;/a&gt;Warning&lt;/h4&gt;&lt;p&gt;⚠ Hiding phone numbers may not be legal in some places, and even if you hide your number, you mobile operator &lt;strong&gt;WILL&lt;/strong&gt; (of course) see your number. Use the method described in this article at your own risk!&lt;/p&gt;
&lt;/div&gt;</summary>
    
    
    
    
    <category term="tips" scheme="https://jiangsc.me/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>Fixing issue on Xorg and VNC</title>
    <link href="https://jiangsc.me/2021/12/02/Fixing-issue-on-Xorg-and-VNC/"/>
    <id>https://jiangsc.me/2021/12/02/Fixing-issue-on-Xorg-and-VNC/</id>
    <published>2021-12-02T09:48:35.000Z</published>
    <updated>2022-08-28T03:29:00.132Z</updated>
    
    <content type="html"><![CDATA[<p>Yesterday morning, when I woke up, I faced a serious issue on my laptop which has Manjaro Linux installed -- the X server can not be started.</p><h3 id="Locating-the-problem"><a href="#Locating-the-problem" class="headerlink" title="Locating the problem"></a>Locating the problem</h3><p>It took me some time to get my head around and locate the root cause. The first thing I tried is obviously force reboot several times, it turned out this did not help at all! Reboot will not solve everything.™<br>The next thing I tried was the fallback initramfs mode. I don&#39;t really understand what it does, but tried it anyway. And unfortunately, that does not work either.<br>At this point,the only option left for me to try is recovery mode. And it turned out to be working correctly. As root user in the recovery mode, I issued the following command <code>systemctl set-default multi-user.target</code>, this makes the tty the default target rather than the graphical interface. Another reboot, and I got into the terminal.<br>Once in terminal, I immediately tried <code>startx</code>, this failed due to some wired permission issue, and with <code>sudo startx</code>, the command failed as well. Looking at the Xorg log, I noticed that the start process stops at: <code>(II) Initializing extension VNC</code>.</p><span id="more"></span><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>The obvious solution at this point is to uninstall the VNC module that is causing the issue, so <code>sudo pacman --remove --recursive tigervnc</code> was the way to go. And it did fix the issue. So what I had to do was reset it back to graphical interface start with <code>systemctl set-default graphical.target</code>.</p><h3 id="Findings-and-thoughts"><a href="#Findings-and-thoughts" class="headerlink" title="Findings and thoughts"></a>Findings and thoughts</h3><p>By doing some more research online, I have found that this issue was actually solved by TigerVNC as can be seen from <a href="https://github.com/TigerVNC/tigervnc/issues/1373">this</a> closed issue. The issue that most likely to have happened here is that Arch Linux package builder did not provide the up-to-date build for the package which resulted in the package does not included the updated dependencies from the X server.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Yesterday morning, when I woke up, I faced a serious issue on my laptop which has Manjaro Linux installed -- the X server can not be started.&lt;/p&gt;
&lt;h3 id=&quot;Locating-the-problem&quot;&gt;&lt;a href=&quot;#Locating-the-problem&quot; class=&quot;headerlink&quot; title=&quot;Locating the problem&quot;&gt;&lt;/a&gt;Locating the problem&lt;/h3&gt;&lt;p&gt;It took me some time to get my head around and locate the root cause. The first thing I tried is obviously force reboot several times, it turned out this did not help at all! Reboot will not solve everything.™&lt;br&gt;The next thing I tried was the fallback initramfs mode. I don&amp;#39;t really understand what it does, but tried it anyway. And unfortunately, that does not work either.&lt;br&gt;At this point,the only option left for me to try is recovery mode. And it turned out to be working correctly. As root user in the recovery mode, I issued the following command &lt;code&gt;systemctl set-default multi-user.target&lt;/code&gt;, this makes the tty the default target rather than the graphical interface. Another reboot, and I got into the terminal.&lt;br&gt;Once in terminal, I immediately tried &lt;code&gt;startx&lt;/code&gt;, this failed due to some wired permission issue, and with &lt;code&gt;sudo startx&lt;/code&gt;, the command failed as well. Looking at the Xorg log, I noticed that the start process stops at: &lt;code&gt;(II) Initializing extension VNC&lt;/code&gt;.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Linux" scheme="https://jiangsc.me/tags/Linux/"/>
    
    <category term="Arch Linux" scheme="https://jiangsc.me/tags/Arch-Linux/"/>
    
    <category term="Xorg" scheme="https://jiangsc.me/tags/Xorg/"/>
    
    <category term="TigerVNC" scheme="https://jiangsc.me/tags/TigerVNC/"/>
    
  </entry>
  
  <entry>
    <title>OpenType Font and Font Family</title>
    <link href="https://jiangsc.me/2021/08/14/OpenType-Font-and-Font-Family/"/>
    <id>https://jiangsc.me/2021/08/14/OpenType-Font-and-Font-Family/</id>
    <published>2021-08-14T01:31:56.000Z</published>
    <updated>2022-08-28T04:04:44.887Z</updated>
    
    <content type="html"><![CDATA[<details class="note primary"><summary><p>TL;DR</p></summary><p>Font family name (Name Id 1 in name table of the font) in a OpenType font file should not be used as the font-family property in CSS if the font is not one of regular, italic, bold, and bold italic style. Instead, the Typographic Family Name or Preferred Font Family (Name ID 16 in name table of the font) should be used if including them in CSS.</p></details><h3 id="Background-and-Problem"><a href="#Background-and-Problem" class="headerlink" title="Background and Problem"></a>Background and Problem</h3><p>Recently, I was tasked to investigate an interesting problem found in our custom font implementation. Font is something I have no prior knowledge about and this investigation really helped me learn a lot more about font and by writing it down, I hope I can help developers who may face similar problems.</p><p>Our system allows user to upload any font as long as they have the permission to use the font commercially. Recently, we realized that some of the fonts uploaded by user were not displayed correctly. More specifically the <code>font-family</code> attribute of these said fonts were incorrectly extracted.</p><p>As an example, an user uploaded a font called <code>fontA-SemiBold</code>, the extracted font-family name from the font was <code>fontA-SemiBold</code> whereas the correct name of for the font-family should be <code>fontA</code>. And in this case. The incorrect font name resulted in incorrect rendering in the front-end as the CSS rendering is suppose to have the correct font-family name.</p><span id="more"></span><h3 id="Investigation"><a href="#Investigation" class="headerlink" title="Investigation"></a>Investigation</h3><p>After looking at several of the uploaded fonts and going through the code, I decided it is necessary to create a small POC using the library we chose in our application. I was able to reproduce the issue that we face with the user uploaded font -- the library yield an incorrect font-family name. This leads me to think whether the problem lies within the library itself. So I immediately used another font I found online. To my surprise, this time the library was able to extract the correct font-family.</p><p>Having done the POC, and finished this small experiment, I&#39;m a bit at lost. <strong>How come the library sometimes work and sometimes failed to work?</strong></p><p><strong>Later, I realized this is because the font I chose happen to be <code>Roboto-Bold</code>.</strong></p><h3 id="Findings-and-learnings"><a href="#Findings-and-learnings" class="headerlink" title="Findings and learnings"></a>Findings and learnings</h3><p>To dig deeper into this, I went through the OpenType font specification on Microsoft website. The relevant part for the documentation is the <code>name</code> table for a font, so I read through all of it and here&#39;s what I found and learnt: </p><ul><li>A font file contains a <em><strong>name</strong></em> table that stores the information about the font, this might include license for the font, font family name, urls etc. The library we used use this specific table to extract information about a font.</li><li>A font family name (name ID 1 in the name table) for a font can only be shared among at most four basic styles of font faces -- they are regular, italic, bold, and bold italic. That is why the library returns the correct font family name for the <code>Roboto-Bold</code> I chose. </li><li>For styles that fall outside of these four styles, such as Semi-Bold or Black, they are treated as a separate font family and will have a separate font family name. For example, the font family name for <code>Roboto-Black</code> will be <code>Roboto-Black</code> rather than <code>Roboto</code>. </li><li>A Typographic Family Name (or Preferred Family) -- Name Id 16 in the name table has no constraints in the number of font faces, but is only present when the font face falls outside of the basic four styles.</li><li>In CSS, the <code>font-family</code> property is expected to be the shared font name. For example, if using <code>Roboto-Black</code> font in CSS, the font-family property should be <code>Roboto</code> rather than <code>Roboto-Black</code></li><li>The difference between the font family name definition between CSS and the OpenType means that it is best to always use the <em><strong>Typographic Family Name</strong></em> if it presents rather than the <em><strong>Font Family name</strong></em> if the HTML&#x2F;CSS is generated on the fly.</li></ul><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>As we have a better understanding on the font family specification now, we need to find ways to retrieve it from the font table. </p><p>Fontkit was the library of choice and therefore I will only discuss how to get the correct font family name in fontkit. Unfortunately, fontkit does not have a direct way of accessing the Typographic Family Name. Through reading its source code, I found the way to go is to use an undocumented API -- <code>font.getName(&#39;preferredName&#39;)</code>, note that the <code>preferredName</code> is the same as Typographic Family Name, and it corresponds to name ID 16 in the font name table.</p><h3 id="Bonus-Using-fonttools-to-dump-and-inspect-font-tables"><a href="#Bonus-Using-fonttools-to-dump-and-inspect-font-tables" class="headerlink" title="Bonus: Using fonttools to dump and inspect font tables"></a>Bonus: Using fonttools to dump and inspect font tables</h3><p>Out of curiosity, and to verify Microsoft&#39;s documentation I found a tool called fonttools which can be used to dump tables in a ttf&#x2F;otf file to ttx format. This format is essentially an XML, you can open it with any text editor and inspect the content.</p><p>Installation of this tool can be done through pip: <code>pip install --user fonttools</code></p><p>Once installation&#39;s finished, you can dump all the tables for a font file using <code>ttx &lt;fontfileName&gt;</code>. Note that this will result in an very large XML -- roughly 120k lines. </p><p>As we are only interested in the name table, the following command can be used to dump that table only: <code>ttx -t name &lt;fontFileName&gt;</code></p><p>Here&#39;s an example of the dump: </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ttFont</span> <span class="attr">sfntVersion</span>=<span class="string">&quot;\x00\x01\x00\x00&quot;</span> <span class="attr">ttLibVersion</span>=<span class="string">&quot;4.26&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;0&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Copyright 2011 Google Inc. All Rights Reserved.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Roboto Black</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;2&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Regular</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Roboto Black</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;4&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Roboto Black</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;5&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Version 2.137; 2017</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;6&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Roboto-Black</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;7&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Roboto is a trademark of Google.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;9&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Google</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;11&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Google.com</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;12&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Christian Robertson</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;13&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Licensed under the Apache License, Version 2.0</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;14&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;16&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Roboto</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">namerecord</span> <span class="attr">nameID</span>=<span class="string">&quot;17&quot;</span> <span class="attr">platformID</span>=<span class="string">&quot;3&quot;</span> <span class="attr">platEncID</span>=<span class="string">&quot;1&quot;</span> <span class="attr">langID</span>=<span class="string">&quot;0x409&quot;</span>&gt;</span></span><br><span class="line">      Black</span><br><span class="line">    <span class="tag">&lt;/<span class="name">namerecord</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ttFont</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="References-and-further-readings"><a href="#References-and-further-readings" class="headerlink" title="References and further readings"></a>References and further readings</h3><p><a href="https://docs.microsoft.com/en-us/typography/opentype/spec/name">https://docs.microsoft.com/en-us/typography/opentype/spec/name</a><br><a href="https://github.com/foliojs/fontkit">https://github.com/foliojs/fontkit</a><br><a href="https://github.com/fonttools/fonttools">https://github.com/fonttools/fonttools</a></p>]]></content>
    
    
    <summary type="html">&lt;details class=&quot;note primary&quot;&gt;&lt;summary&gt;&lt;p&gt;TL;DR&lt;/p&gt;
&lt;/summary&gt;
&lt;p&gt;Font family name (Name Id 1 in name table of the font) in a OpenType font file should not be used as the font-family property in CSS if the font is not one of regular, italic, bold, and bold italic style. Instead, the Typographic Family Name or Preferred Font Family (Name ID 16 in name table of the font) should be used if including them in CSS.&lt;/p&gt;

&lt;/details&gt;


&lt;h3 id=&quot;Background-and-Problem&quot;&gt;&lt;a href=&quot;#Background-and-Problem&quot; class=&quot;headerlink&quot; title=&quot;Background and Problem&quot;&gt;&lt;/a&gt;Background and Problem&lt;/h3&gt;&lt;p&gt;Recently, I was tasked to investigate an interesting problem found in our custom font implementation. Font is something I have no prior knowledge about and this investigation really helped me learn a lot more about font and by writing it down, I hope I can help developers who may face similar problems.&lt;/p&gt;
&lt;p&gt;Our system allows user to upload any font as long as they have the permission to use the font commercially. Recently, we realized that some of the fonts uploaded by user were not displayed correctly. More specifically the &lt;code&gt;font-family&lt;/code&gt; attribute of these said fonts were incorrectly extracted.&lt;/p&gt;
&lt;p&gt;As an example, an user uploaded a font called &lt;code&gt;fontA-SemiBold&lt;/code&gt;, the extracted font-family name from the font was &lt;code&gt;fontA-SemiBold&lt;/code&gt; whereas the correct name of for the font-family should be &lt;code&gt;fontA&lt;/code&gt;. And in this case. The incorrect font name resulted in incorrect rendering in the front-end as the CSS rendering is suppose to have the correct font-family name.&lt;/p&gt;</summary>
    
    
    
    
    <category term="OpenType font" scheme="https://jiangsc.me/tags/OpenType-font/"/>
    
    <category term="Font" scheme="https://jiangsc.me/tags/Font/"/>
    
    <category term="CSS" scheme="https://jiangsc.me/tags/CSS/"/>
    
    <category term="font-family" scheme="https://jiangsc.me/tags/font-family/"/>
    
    <category term="NodeJS" scheme="https://jiangsc.me/tags/NodeJS/"/>
    
  </entry>
  
  <entry>
    <title>Advanced VirtualBox: Auto start virtual machine on Windows</title>
    <link href="https://jiangsc.me/2021/07/10/Advanced-VirtualBox-Auto-start-virtualbox-on-Windows/"/>
    <id>https://jiangsc.me/2021/07/10/Advanced-VirtualBox-Auto-start-virtualbox-on-Windows/</id>
    <published>2021-07-10T00:18:14.000Z</published>
    <updated>2022-08-28T03:27:08.332Z</updated>
    
    <content type="html"><![CDATA[<p>I&#39;ve always considered myself to be an advanced computer user, but I&#39;m not a Windows person, at least not when I&#39;m coding. So when I got a Windows 10 laptop as a daily work machine, I&#39;m beyond disappointed. Luckily, there&#39;s always a way around -- VirtualBox it is. The laptop I got was powerful enough that I was able to allocate 16GB of memory as well as 3 cores of the host machine to the virtual machine.</p><p>Once I had my vm setup, I always use Windows Terminal and SSH into the machine for development. One day, it occurs to me I can (and should) automate all of this. </p><h3 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h3><p>Automatically start the selected VirtualBox virtual machine in <strong>headless</strong> mode (this can save a bit of resources), wait for the machine to boot, and then SSH into the VM using Windows Terminal with selected port forwarding on the host and virtual machine.</p><span id="more"></span><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>This is not something that can be achieved in one go, therefore I&#39;m going to breakdown by components: </p><ul><li>Virtual machine -- Assuming Systemd based Linux distro<ul><li>We need to disable the graphical login interface for the VM. To achieve this, we can do <code>systemctl set-default multi-user.target </code>. If we need to revert back to graphical login, we can do <code>systemctl set-default graphical.target</code>. The multi-user.target and graphical.target are equivalent to what was traditionally known as run levels in SystemV.</li><li>We also need to setup the necessary SSH access from the Windows 10 host machine to the virtual machine. I won&#39;t cover that here. Only thing to keep in mind is to open the necessary ports.</li></ul></li><li>Host machine -- need to setup batch script, Windows Terminal profile and Window startup <ul><li>Batch script<ul><li>What we need to achieve in the batch script is start the machine and wait for it to boot. Fortunately, virtualbox installation comes with something that can achieve this, it is called VBoxmanage.exe and is in the VirtualBox installation folder</li><li>To start the virtual machine, the command will be <code>&quot;C:\Program Files\VirtualBox\VboxManage.exe&quot; startvm [VM name] --type headless</code>. Change the command with your VM name, the <code>--type headless</code> means that no GUI of the virtual machine will be started at all.</li><li>Next step is to wait for the machine to start up, the command for this will be <code>&quot;C:\Program Files\VirtualBox\VboxManage.exe&quot; wait &quot;[VM name]&quot; &quot;/VirtualBox/GuestInfo/OS/NoLoggedInUsers&quot;</code></li><li>Last step for the batch script will be <code>wt</code>, which represents windows terminal.</li><li>To put it together, the batch script will be   <figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">&quot;C:\Program Files\VirtualBox\VboxManage.exe&quot; startvm [VM name] --<span class="built_in">type</span> headless</span><br><span class="line">&quot;C:\Program Files\VirtualBox\VboxManage.exe&quot; wait &quot;[VM name]&quot; &quot;/VirtualBox/GuestInfo/OS/NoLoggedInUsers&quot;</span><br><span class="line">wt</span><br></pre></td></tr></table></figure></li></ul></li><li>Windows terminal profile<ul><li>Create a profile in Windows terminal, this can be done from either the UI or the json setting file.</li><li>Here, I will present the profile I use personally:   <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bellStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;visual&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;colorScheme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Tango Dark&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;commandline&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ssh -R 5432:localhost:5432 -L 8080:[::1]:8080 -L 3000:[::1]:3000 -t username@vm_ip_address &quot;</span>exec zsh -l<span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;VM&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scrollbarState&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hidden&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>It is obvious the commandline part is a bit bloated cause I was trying to do a bit too much in one go. Actually, it is a lot cleaner to put the command in a batch file and this line can be replaced by the path to that specific batch file as well.</li></ul></li><li>Windows Auto Start<ul><li>Press Windows+R and type <code>shell:startup</code>, this will bring up a folder called &quot;StartUp&quot; where you can put a bunch of things that you want to auto start when Windows starts.</li><li>Drag the Batch script created into this folder to create a shortcut.</li></ul></li></ul></li></ul><p>After these setup, Windows will now start the virtual machine every time you start your computer.</p><h3 id="Bonus-shutdown-VM-in-one-click"><a href="#Bonus-shutdown-VM-in-one-click" class="headerlink" title="Bonus: shutdown VM in one click"></a>Bonus: shutdown VM in one click</h3><p>The same aforementioned VboxManage.exe can be used to poweroff the virtual machine as well. You can achieve that by creating a batch file with the following content: </p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">&quot;C:\Program Files\Oracle\VirtualBox\VBoxManage.exe&quot; controlvm DEV_MACHINE poweroff</span><br></pre></td></tr></table></figure><p>You can also halt or save the state of the VM rather than poweroff. More information on this can be found in the virtualbox manual.</p><h3 id="Further-readings"><a href="#Further-readings" class="headerlink" title="Further readings"></a>Further readings</h3><p><a href="https://www.virtualbox.org/manual/ch08.html">VirualBox manual on VboxManage</a><br><a href="https://www.freedesktop.org/software/systemd/man/systemd.special.html">Systemd manual on special units</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;I&amp;#39;ve always considered myself to be an advanced computer user, but I&amp;#39;m not a Windows person, at least not when I&amp;#39;m coding. So when I got a Windows 10 laptop as a daily work machine, I&amp;#39;m beyond disappointed. Luckily, there&amp;#39;s always a way around -- VirtualBox it is. The laptop I got was powerful enough that I was able to allocate 16GB of memory as well as 3 cores of the host machine to the virtual machine.&lt;/p&gt;
&lt;p&gt;Once I had my vm setup, I always use Windows Terminal and SSH into the machine for development. One day, it occurs to me I can (and should) automate all of this. &lt;/p&gt;
&lt;h3 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h3&gt;&lt;p&gt;Automatically start the selected VirtualBox virtual machine in &lt;strong&gt;headless&lt;/strong&gt; mode (this can save a bit of resources), wait for the machine to boot, and then SSH into the VM using Windows Terminal with selected port forwarding on the host and virtual machine.&lt;/p&gt;</summary>
    
    
    
    
    <category term="virtualbox" scheme="https://jiangsc.me/tags/virtualbox/"/>
    
    <category term="Windows" scheme="https://jiangsc.me/tags/Windows/"/>
    
    <category term="Automation" scheme="https://jiangsc.me/tags/Automation/"/>
    
  </entry>
  
  <entry>
    <title>IELTS exam and experience</title>
    <link href="https://jiangsc.me/2021/06/30/IELTS-exam-and-experience/"/>
    <id>https://jiangsc.me/2021/06/30/IELTS-exam-and-experience/</id>
    <published>2021-06-30T09:13:50.000Z</published>
    <updated>2022-08-28T03:28:06.469Z</updated>
    
    <content type="html"><![CDATA[<p>Though this is technically a tech blog where I usually put my thoughts and learnings regarding technologies, I still would like to share some of my experience with taking the IELTS exam which is about a month ago. </p><p><strong>Please note that the author is in no way affiliate with the websites and&#x2F;or services mentioned below, use of these software and&#x2F;or services is at the sole discretion of the reader</strong></p><h3 id="Why-I-choose-to-take-IELTS"><a href="#Why-I-choose-to-take-IELTS" class="headerlink" title="Why I choose to take IELTS"></a>Why I choose to take IELTS</h3><p>To be honest, my current status does not require me to take the IELTS exam. Though after some consideration, I have decided to take the exam and see if I can benefit from extra immigration points by taking the IELTS exam. My goal is reaching 8 in listening and 7 in all other sections. I made the decision to take the exam on the night of May 22nd, 2021. I took the exam on June 13th, 2021. The preparation time is around 21 days.</p><span id="more"></span><h3 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h3><p>I have a day job, so my preparation time on working days was quite limited. I usually get home at around 6pm. My dinner and routine exercise finishes at 8pm. So my preparation for IELTS starts at 8:15pm to 8:30pm. </p><p>The list of tools and&#x2F;or books I used are listed below: </p><ul><li><p>Road to IELTS<br>  This is an comprehensive tool that can be used to prepare for both the academic and the general training version of the exam. It was offered for free at my local public library. I&#39;m very greatful to my local library for offering such an invaluable service, it helped me quite a lot.<br>  As for using this tool, different people may have different ideas. I used this mainly as a training tool to familiarize myself with the listening and reading part on computer-based IELTS exam. In this system, there are 10 mock exams for each part of the IELTS exam which is what I used most for listening and reading. I alternate between Reading and Listening on each working day, spending around 1 to 1.5 hours on this.<br>  There are mini practice sections for each parts as well, this was mainly to educate test takers on different kind of formats for the listening and speaking test. As this is not my first time taking the IELTS exam, I skip most of them. But I can see how they are helpful for those who are taking IELTS for the first time.<br>  The difficulty level on the mock exams are actually a bit higher than the actual exam, it could be because the mocked test delivery system is not smart enough and misses out correct answer sometimes. As a reference, I usually get around 33 correct in the Listening section, which translates to about 6.5. I got 9 in the actual IELTS exam for the listening. For the reading part, I usually get around 32 correct which is also 6.5, while in my actual IELTS test, I got 8.5.<br>  For writing and speaking, it is also practical to use the mocked exams, the only caveate is that no one will grade thsoe. I would suggest at least read through the sample exam essays provided, and try to follow the structure and learn some good words from the essay. For speaking, I don&#39;t feel like you can improve your speaking skills in a short time, but the mock exams offered is still helpful.</p></li><li><p>Writing 9<br>  This is a paid service that&#39;s offered at 12 USD per month. I found it quite helpful, cause you can actually mock a writing exam with it. I did around 3 to 4 essays on it and get around 6.5 each. The thing I like about this tool is that it can spot your spelling mistakes among other things.</p></li><li><p>Simon&#39;s writing course<br>  This is one of the courses that I definitely recommend watching. This course had helped me a lot in achieving the score of 7 on writing. To summarize on what I had learnt from this course: IELTS writing is not only about good use of words, but also about organizing the structure of the essay logically. I do think the latter what I used to ignore. In my first IELTS exam taken at 2011 (at that time, I took the Acacdemic version) I only got 5.5 in IELTS writing, and 10 years later, I got 7 for the general training version.</p></li><li><p>IELTS Band 9 Vocab Secrets by Caambridge Consultants<br>  This book contains loads of good examples about usage of good words in either reading and writing. I highly recommend reading through the whole book at least once and practice using the word examples given in the book.</p></li></ul><h3 id="Exam-tips"><a href="#Exam-tips" class="headerlink" title="Exam tips"></a>Exam tips</h3><p>For me, this is my first time taking the computer-based IELTS exam. I would like to share some tips that I think other candidates may find useful: </p><ul><li>Listening<ul><li>From my experience on taking both the mocked and the actual exam, Computer-based listening test is a bit more difficult than paper-based ones. There are several reasons for this: <ul><li>In computer based exam, you will not be given time to transfer your answers from the exam paper to the answer sheet. Instead, you will only be given 2 minutes to check for all the answers at the end of the listening test. This means that you may not have enough time to check for some easily identifiable mistakes like typos, singular&#x2F;plural forms or tense problems. So when you practice, keep this in mind, and try to avoid them as much as possible.</li><li>You will have to type and listen and the same time in computer based exam. I guess this is quite obvious, it might not be a big problem but keep in mind that in the IELTS exam, you are under considerable stress, for non-native speakers, it may be a bit difficult.</li></ul></li><li>Highlighting is important in listening test. For me, this is how I achieved Band 9 in listening -- I highlight things I think are important. In computer based exams, highlighting will help you focus on the keywords and in my experience, I feel more confident when I highlight things.</li></ul></li><li>Reading: <ul><li>Highlighting, again. Highlighting is also important in reading. I&#39;m glad that the testing system provides a way to highlight in reading, it is really helpful and mimics the paper exam well.</li><li>Try to use the color settings to avoid eye strain. The computer delivered IELTS exam have settings to change the background color of the exam. To me, this is really helpful. I changed the background color from white to a bit more yellowish. This causes less eye strain and helped me focus on the exam better.</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;Though this is technically a tech blog where I usually put my thoughts and learnings regarding technologies, I still would like to share some of my experience with taking the IELTS exam which is about a month ago. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please note that the author is in no way affiliate with the websites and&amp;#x2F;or services mentioned below, use of these software and&amp;#x2F;or services is at the sole discretion of the reader&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;Why-I-choose-to-take-IELTS&quot;&gt;&lt;a href=&quot;#Why-I-choose-to-take-IELTS&quot; class=&quot;headerlink&quot; title=&quot;Why I choose to take IELTS&quot;&gt;&lt;/a&gt;Why I choose to take IELTS&lt;/h3&gt;&lt;p&gt;To be honest, my current status does not require me to take the IELTS exam. Though after some consideration, I have decided to take the exam and see if I can benefit from extra immigration points by taking the IELTS exam. My goal is reaching 8 in listening and 7 in all other sections. I made the decision to take the exam on the night of May 22nd, 2021. I took the exam on June 13th, 2021. The preparation time is around 21 days.&lt;/p&gt;</summary>
    
    
    
    
    <category term="IELTS" scheme="https://jiangsc.me/tags/IELTS/"/>
    
    <category term="Preparation" scheme="https://jiangsc.me/tags/Preparation/"/>
    
  </entry>
  
  <entry>
    <title>Postgres, JavaScript and sorting</title>
    <link href="https://jiangsc.me/2021/05/09/Postgres-JavaScript-and-sorting/"/>
    <id>https://jiangsc.me/2021/05/09/Postgres-JavaScript-and-sorting/</id>
    <published>2021-05-09T01:00:12.000Z</published>
    <updated>2022-08-28T03:29:40.283Z</updated>
    
    <content type="html"><![CDATA[<p>This week, while setting up local project for work, I encountered some weired issue during the unit test and this has something to do with postgres and its default settings under Windows and other OS.</p><h3 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h3><p>As an example, consider the following array: <code>[ &#39;D&#39;, &#39;d&#39;, &#39;a&#39;, &#39;A&#39;, &#39;c&#39;, &#39;b&#39;, &#39;CD&#39;, &#39;Capacitor&#39; ]</code></p><p>Sorting this in JavaScript results in case sensitive result, where upper case always come first: </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; [ <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;CD&#x27;</span>, <span class="string">&#x27;Capacitor&#x27;</span> ].<span class="title function_">sort</span>()</span><br><span class="line">[ <span class="string">&quot;A&quot;</span>, <span class="string">&quot;CD&quot;</span>, <span class="string">&quot;Capacitor&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span> ]</span><br></pre></td></tr></table></figure><p>Sorting this in Postgres SQL with default installation will yield a case insensitive sorting where upper and lower case are mixed:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> regexp_split_to_table(<span class="string">&#x27;D d a A c b CD Capacitor&#x27;</span>, <span class="string">&#x27; &#x27;</span>) <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"> regexp_split_to_table </span><br><span class="line"><span class="comment">-----------------------</span></span><br><span class="line"> a</span><br><span class="line"> A</span><br><span class="line"> b</span><br><span class="line"> c</span><br><span class="line"> Capacitor</span><br><span class="line"> CD</span><br><span class="line"> d</span><br><span class="line"> D</span><br></pre></td></tr></table></figure><p>The goal here is to make sorting consistent, so we can either fix the Postgres side or fix the JavaScript side.</p><span id="more"></span><h3 id="Investigation"><a href="#Investigation" class="headerlink" title="Investigation"></a>Investigation</h3><p>Looking carefully at each of these results, it is not difficult to realize that the sorting in JavaScript is based on ASCII, i.e. character <code>A</code> has an ASCII code of 32 where as <code>a</code> has ASCII code of 97, so <code>A</code> comes first. This <strong>IS NOT</strong> the proper way to do string sorting in JavaScript.</p><p>For the result that Postgres gave, it is a bit more complex. Postgres uses <code>LC_COLLATE</code> to determine the sort order of the array.This variable comes from the system and different OS have different implementation, when using locale <code>C</code> or <code>POSIX</code>, strings are sorted according to their ASCII value, any other locales will result in a case insensitive result.</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>Here comes the solution part, as mentioned earlier, we can either fix the JavaScript or fix the Postgres, so I&#39;ll present the solutions separately.</p><p>There are several ways to make the sorting case insensitive in JavaScript: </p><ul><li><p><code>[ &#39;D&#39;, &#39;d&#39;, &#39;a&#39;, &#39;A&#39;, &#39;c&#39;, &#39;b&#39;, &#39;CD&#39;, &#39;Capacitor&#39; ].sort((a,b) =&gt; a.localeCompare(b))</code><br>This uses localeCompare from string prototype which have some performance implication on larger array.</p></li><li><p><code>[ &#39;D&#39;, &#39;d&#39;, &#39;a&#39;, &#39;A&#39;, &#39;c&#39;, &#39;b&#39;, &#39;CD&#39;, &#39;Capacitor&#39; ].sort(new Intl.Collator(&#39;en_us&#39;).compare)</code><br>This is the recommended by MDN to sort larger arrays.</p></li></ul><p>For Postgres, the first thing that needs to be noted is that Postgres recommends against using locales if it can be avoided, from their documentation: </p><blockquote><p>The drawback of using locales other than C or POSIX in PostgreSQL is its performance impact. It slows character handling and prevents ordinary indexes from being used by LIKE. For this reason use locales only if you actually need them. </p></blockquote><p>The one-off way to fix the sorting is by specifiying the <code>LC_COLLATE</code> value when creating the database, for example: </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE db </span><br><span class="line">    <span class="keyword">WITH</span> TEMPLATE <span class="operator">=</span> template0 </span><br><span class="line">    ENCODING <span class="operator">=</span> <span class="string">&#x27;UTF8&#x27;</span> </span><br><span class="line">    LC_COLLATE <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span> </span><br><span class="line">    LC_CTYPE <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span>;</span><br></pre></td></tr></table></figure><p>The created database (db in this case) will use <code>C</code> as <code>LC_COLLATE</code> overriding the default <code>LC_COLLATE</code> value from the OS. With the new database created, you easily verify it will sort in a case sensitive way by the ASCII value once you connect to the database and run the query presented previously.</p><p>This one-off way is good enough only if you care about creating such database once. Imaging next time you create a new database, you will still have to manually override the <code>LC_COLLATE</code> value. So the way to go is to modify the template database, because <code>LC_COLLATE</code> can&#39;t be changed once the database has been created, we will have to create a new database and set it as template. </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">--- Unset template1 as template before dropping</span></span><br><span class="line"><span class="keyword">UPDATE</span> pg_database </span><br><span class="line">    <span class="keyword">SET</span> datistemplate<span class="operator">=</span><span class="string">&#x27;false&#x27;</span> </span><br><span class="line">    <span class="keyword">WHERE</span> datname<span class="operator">=</span><span class="string">&#x27;template1&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--- Create a new database that uses C as locale</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE template1 </span><br><span class="line">    IS_TEMPLATE <span class="literal">true</span> </span><br><span class="line">    ENCODING <span class="operator">=</span> <span class="string">&#x27;UTF8&#x27;</span> </span><br><span class="line">    LC_COLLATE <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span> </span><br><span class="line">    LC_CTYPE <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span> </span><br><span class="line">    CONNECTION LIMIT <span class="operator">=</span> <span class="number">-1</span> </span><br><span class="line">    TEMPLATE template0;</span><br><span class="line"></span><br><span class="line"><span class="comment">--- Create a new databse now should have C as locale.</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE db3;</span><br><span class="line"></span><br><span class="line"><span class="comment">--- Should return C </span></span><br><span class="line"><span class="keyword">SHOW</span> lc_collate;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Another way to do this, is to initialize the database cluster with C locale as below: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R postgres:postgres /var/lib/postgres/</span><br><span class="line">su - postgres -c &quot;initdb --locale C -D &#x27;/var/lib/postgres/data&#x27;&quot;</span><br></pre></td></tr></table></figure><p>this will create template database with C locale.</p><h3 id="Takeaways"><a href="#Takeaways" class="headerlink" title="Takeaways"></a>Takeaways</h3><p>String sorting with the default method in JavaScript and most other languages is merely a comparsion based on the ASCII code, this results in upper case letters always comes first.</p><p>String sorting in PostgreSQL depends on the <code>LC_COLLATE</code> setting of the table which depends on the setting of the operating system, default sorting will yield results that mixes upper case and lower case, in other words, sorting is <strong>not</strong> case sensitive. There are many ways to get case sensitive sorting, but the most reliable way should be specifiying the <code>LC_COLLATE</code> when creating the database.</p><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><ul><li><a href="https://www.postgresql.org/docs/13/locale.html">https://www.postgresql.org/docs/13/locale.html</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare</a></li><li><a href="https://dba.stackexchange.com/questions/106964/why-is-my-postgresql-order-by-case-insensitive">Stackexchange question</a></li><li><a href="https://wiki.postgresql.org/wiki/FAQ#Why_do_my_strings_sort_incorrectly.3F">Postgres FAQ</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;This week, while setting up local project for work, I encountered some weired issue during the unit test and this has something to do with postgres and its default settings under Windows and other OS.&lt;/p&gt;
&lt;h3 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h3&gt;&lt;p&gt;As an example, consider the following array: &lt;code&gt;[ &amp;#39;D&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;A&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;CD&amp;#39;, &amp;#39;Capacitor&amp;#39; ]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Sorting this in JavaScript results in case sensitive result, where upper case always come first: &lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; [ &lt;span class=&quot;string&quot;&gt;&amp;#x27;D&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;d&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;c&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;CD&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;Capacitor&amp;#x27;&lt;/span&gt; ].&lt;span class=&quot;title function_&quot;&gt;sort&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;string&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;CD&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;Capacitor&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;d&amp;quot;&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Sorting this in Postgres SQL with default installation will yield a case insensitive sorting where upper and lower case are mixed:&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; regexp_split_to_table(&lt;span class=&quot;string&quot;&gt;&amp;#x27;D d a A c b CD Capacitor&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27; &amp;#x27;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; regexp_split_to_table &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-----------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Capacitor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; CD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; D&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The goal here is to make sorting consistent, so we can either fix the Postgres side or fix the JavaScript side.&lt;/p&gt;</summary>
    
    
    
    
    <category term="JavaScript" scheme="https://jiangsc.me/tags/JavaScript/"/>
    
    <category term="Postgres" scheme="https://jiangsc.me/tags/Postgres/"/>
    
    <category term="Sorting" scheme="https://jiangsc.me/tags/Sorting/"/>
    
  </entry>
  
  <entry>
    <title>Android ADB and user management</title>
    <link href="https://jiangsc.me/2021/04/17/Android-ADB-and-user-management/"/>
    <id>https://jiangsc.me/2021/04/17/Android-ADB-and-user-management/</id>
    <published>2021-04-17T04:24:17.000Z</published>
    <updated>2022-08-28T03:27:19.332Z</updated>
    
    <content type="html"><![CDATA[<p>⚠ This article requires Rooted Android phones, please follow the instructions with caution.</p><h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p>Since Android 5, the Android system have added the capability of multi-user, the aim is most likely to make sharing devices easier between different users in the family. Later on, Google added again something called profile, this allows enterprise to manage devices their employers use. In this article, I am going to explore some other possibilities enabled by multiuser&#x2F;profile functionality. More specifically I&#39;m going to focus on the restricted user profile. </p><h3 id="Problem-to-Solve"><a href="#Problem-to-Solve" class="headerlink" title="Problem to Solve"></a>Problem to Solve</h3><p>There are several problems I&#39;m aiming to solve with the restricted profile: </p><ul><li>I want to focus on things that actually matter rather than spending too much time on my phone, I would like my phone to be without any apps that can disturb or distract me when I want to focus. But I don&#39;t want to uninstall certain apps, as they are necessary in order to keep in touch with my family and friends.</li><li>I want to install certain apps that can track me into a separate space, a space where it is impossible for them to track me using the microphone, camera, or location.<span id="more"></span><h3 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h3>Well, as an Android user that also owns an iOS device, I have to say Apple have done a good job in many of the things I mentioned above. For example, my first problem can be solved in the iOS setting natively. Android does have something similar called digital wellbeing, but since it is from Google, I&#39;m not that comfortable installing it on to my phone.</li></ul><p>Anyway, I feel like the restricted profile is still a good solution to my problem on Android.</p><h3 id="How-to"><a href="#How-to" class="headerlink" title="How to?"></a>How to?</h3><p>So in Android shell, there&#39;s something called pm. This command can be used to create a new user.<br>Here is part of the help doc that I&#39;m interested in:</p><p><code>create-user [--profileOf USER_ID] [--managed] [--restricted] [--ephemeral] [--guest] USER_NAME         Create a new user with the given USER_NAME, printing the new user identifier of the user.</code></p><p>That is, command <code>pm create-user</code> can be used to create user on your Android phone. Assuming you have access to Android adb, issuing<br><code>adb shell pm create-user --restricted test</code> will create a user named test with restricted profile, the command will show the userid of the newly created user, will be referenced as <code>$userId</code> in the following.</p><p>Once the user has been created, you can manage the list of the users it will have access to in the settings, this is in Settings&#x2F;Multi-user. </p><p>To me, I want impose more restrictions on the user, there is indeed a way to do so:</p><p><code>adb shell su -c &#39;pm set-user-restriction --user USER_ID no_install_apps 1&#39;</code> -- this will disallow install apps for the newly created profile, in this case <strong>no_install_apps</strong> is the name of the restriction, while the ** 1** immidiately follow is a boolean representing whether the restriction is enabled. (This command assumes you use Magsik as su)</p><p>You can find a list of restrictions available from Google&#39;s official <a href="https://developer.android.com/reference/android/os/UserManager#constants_1">document</a>. Take note of the <code>Constant Value</code> in the document, that&#39;s the restriction value you need to use.</p><p>If you want to see what restriction you&#39;ve added, you can issue <code>adb shell dumpsys user</code>, this command will dump all the users on the current device and the restrictions if any.</p><p>To switch to a different user, you can use <code>am switch-user USER_ID</code> or do so from the UI.</p><p>The easiest way to delete an user is through the settings menu. Though you can also do so through the command: <code>pm remove-user USER_ID</code></p><h3 id="Caveat"><a href="#Caveat" class="headerlink" title="Caveat"></a>Caveat</h3><p>There are several issues that need to be taken into consideration when using a restricted profile: </p><ol><li>You will not have access to any of the files in the primary account, this is a big issue if you have social media apps installed on this account and want to upload image from the primary account.</li><li>You will not have Google account access or root access. Most people will be okay with this, but it is a bit troublesome at times.</li><li>Remember to switch the profile back, when you no longer need to be in the restricted one. For example, if you leave your restricted profile on overnight, you will not have an alarm clock if you don&#39;t set it up correctly.</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;⚠ This article requires Rooted Android phones, please follow the instructions with caution.&lt;/p&gt;
&lt;h3 id=&quot;Background&quot;&gt;&lt;a href=&quot;#Background&quot; class=&quot;headerlink&quot; title=&quot;Background&quot;&gt;&lt;/a&gt;Background&lt;/h3&gt;&lt;p&gt;Since Android 5, the Android system have added the capability of multi-user, the aim is most likely to make sharing devices easier between different users in the family. Later on, Google added again something called profile, this allows enterprise to manage devices their employers use. In this article, I am going to explore some other possibilities enabled by multiuser&amp;#x2F;profile functionality. More specifically I&amp;#39;m going to focus on the restricted user profile. &lt;/p&gt;
&lt;h3 id=&quot;Problem-to-Solve&quot;&gt;&lt;a href=&quot;#Problem-to-Solve&quot; class=&quot;headerlink&quot; title=&quot;Problem to Solve&quot;&gt;&lt;/a&gt;Problem to Solve&lt;/h3&gt;&lt;p&gt;There are several problems I&amp;#39;m aiming to solve with the restricted profile: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I want to focus on things that actually matter rather than spending too much time on my phone, I would like my phone to be without any apps that can disturb or distract me when I want to focus. But I don&amp;#39;t want to uninstall certain apps, as they are necessary in order to keep in touch with my family and friends.&lt;/li&gt;
&lt;li&gt;I want to install certain apps that can track me into a separate space, a space where it is impossible for them to track me using the microphone, camera, or location.</summary>
    
    
    
    
    <category term="Android" scheme="https://jiangsc.me/tags/Android/"/>
    
    <category term="ADB" scheme="https://jiangsc.me/tags/ADB/"/>
    
  </entry>
  
  <entry>
    <title>Terraform, Version Constraint and Debugging</title>
    <link href="https://jiangsc.me/2021/02/27/Terraform-version-constraint-and-debugging/"/>
    <id>https://jiangsc.me/2021/02/27/Terraform-version-constraint-and-debugging/</id>
    <published>2021-02-27T21:08:59.000Z</published>
    <updated>2022-08-28T03:30:07.920Z</updated>
    
    <content type="html"><![CDATA[<p>This week I encountered some issues with Terraform (and, well, Kubernetes) again. This time, the problem was way more interesting than I thought.</p><span id="more"></span><h3 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h3><p>When deploying to Kubernetes, I got <code>dial tcp 127.0.0.1:80: connect: connection refused, connection reset error.</code></p><p>The more specific error message I got is </p><blockquote><p>Error: Get &quot;<a href="http://localhost/apis/apps/v1/namespaces/default/deployments/xxx&quot;">http://localhost/apis/apps/v1/namespaces/default/deployments/xxx&quot;</a>: dial tcp 127.0.0.1:80: connect: connection refused</p></blockquote><p>As this error happened in our deployment pipeline (we use Terraform to deploy stuff to Kubernetes), my natural thought was that this can be solved easily with a retry. So I retried the deployment right away, and it still failed. </p><p>When I finally stopped what I was working on and start to examine the message carefully, I realized it is quite strange: how come the pipeline (or the Kubectl for that matter) trying to connect to localhost when it is meant to connect to a Kubernetes cluster located somewhere else? </p><p>As you will see from my solution, this message was <strong>not</strong> helpful at all and in some sense quite misleading to someone who is trying to debug.</p><p>After comparing the log from a previous successful deployment and the said failed deployment. I realized the issue was with the Kubernetes provider for Terraform: while in the successful build, the <code>terraform init</code> command yield something like <code>Installing hashicorp/kubernetes v1.13.3...</code>, in the failed build the same command yield something like <code>Installing hashicorp/kubernetes v2.0.2...</code>. </p><p>It is quite obvious that this issue was caused by breaking changes in the Terraform provider. According to their <a href="https://github.com/hashicorp/terraform-provider-kubernetes/blob/master/CHANGELOG.md#200-january-21-2021">changelog</a>, there were several breaking changes in the 2.0.0 version, among them were these two:</p><blockquote><p>Remove load_config_file attribute from provider block (#1052)<br>Remove default of ~&#x2F;.kube&#x2F;config for config_path (#1052)</p></blockquote><p>In our deployment Terraform, we set <code>load_config_file</code> to <code>true</code> to load the <code>kube_config</code> file from the default config_path of <code>~/.kube/config</code>. Due to the breaking changes quoted above, neither the <code>load_config_file</code> nor the default config_path existed any more, and when Kubernetes can not find these two files, it will try to connect to the 127.0.0.1 (aka localhost) as a fallback which caused the connection refused error.</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>There are two kind of solutions to this issue: </p><ul><li>Updating the Terraform code so it is compatible with the 2.0.0 version of the Kubernetes provider<br>  OR</li><li>Downgrade to the last working version of the Kubernetes provider and keep the existing Terraform code</li></ul><p>Due to the urgency of getting the pipeline and deployment back online, I chose the downgrading route. Essentially, I&#39;m adding the version constraint to the Kubernetes provider that was previously missing:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubernetes = &#123;</span><br><span class="line">  source  = &quot;registry.terraform.io/hashicorp/kubernetes&quot;</span><br><span class="line">  version = &quot;~&gt; 1.0&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Adding in the version constraint means that Terraform will only increase the <em><strong>rightmost</strong></em> version number, therefore it will not be able to upgrade to version 2.0.0 automatically and can avoid this specific problem that was caused by breaking changes.</p><h3 id="Takeaways"><a href="#Takeaways" class="headerlink" title="Takeaways"></a>Takeaways</h3><p>On debugging:</p><ul><li>Generally speaking, if you found your Terraform changed behavior without you making any changes, you could be making the same mistake as I did: not specifying the version constraint for the provider. You can find some clues in your <code>terraform init</code> command, for example, by comparing if the same provider version was used on the two builds where one was successful, the other failed.</li><li>Personally, I was never familiar enough with Kubernetes to know that the default behavior of Kubectl is to use 127.0.0.1 when there&#39;s no config file present. Now that I came across this gotcha, I do realize this kind of behavior was not that uncommon per se: Knex which is the library we used for node.js also have similar behavior, and I will keep this in mind if I encounter something similar in the future.</li></ul><p>On Terraform:</p><ul><li>When there&#39;s no version constraint specified, Terraform will always use the latest provider version. Therefore, it is important to specify the version constraint. It is recommended by Terraform to always use a specific version when using third party modules. For more information on specifying the version constraint, read the <a href="https://www.terraform.io/docs/language/expressions/version-constraints.html">documentation</a> from their website.</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;This week I encountered some issues with Terraform (and, well, Kubernetes) again. This time, the problem was way more interesting than I thought.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Terraform" scheme="https://jiangsc.me/tags/Terraform/"/>
    
    <category term="Kubernetes" scheme="https://jiangsc.me/tags/Kubernetes/"/>
    
    <category term="Version constraint" scheme="https://jiangsc.me/tags/Version-constraint/"/>
    
    <category term="debug" scheme="https://jiangsc.me/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>Lessons Learnt On Deploying GO Lambda Application on AWS - Part I</title>
    <link href="https://jiangsc.me/2021/01/24/Lessons-Learnt-On-Deploying-GO-Lambda-Application-on-AWS/"/>
    <id>https://jiangsc.me/2021/01/24/Lessons-Learnt-On-Deploying-GO-Lambda-Application-on-AWS/</id>
    <published>2021-01-24T06:06:00.000Z</published>
    <updated>2022-08-28T03:28:11.092Z</updated>
    
    <content type="html"><![CDATA[<p>Recently, I started to build an application with Go, it is a quite simple application that does something very basic and then sends an notification to a telegram bot. It&#39;s quite obvious to me this kind of application is quite suitable to run as Lambda, and that&#39;s where I decided to deploy my application to once it is working well locally. It turned out that I had to solve several issues I encountered. Here I share how I solved those issues, so you don&#39;t have to scratch your head when encounter them.</p><span id="more"></span><h3 id="Attempt-1-Deploy-the-application-through-the-web-interface"><a href="#Attempt-1-Deploy-the-application-through-the-web-interface" class="headerlink" title="Attempt 1: Deploy the application through the web interface."></a>Attempt 1: Deploy the application through the web interface.</h3><p>For my first attempt on deploying the application, my goal is to make things as simple as possible.<br>Therefore, I chose to use the web interface. From the web interface, there&#39;s an option to upload zip file and that&#39;s where I began.</p><h5 id="Problem-Compile-GO-in-an-static-way"><a href="#Problem-Compile-GO-in-an-static-way" class="headerlink" title="Problem: Compile GO in an static way"></a>Problem: Compile GO in an static way</h5><p>This problem happens quite often from what I see on the internet. The main issue with here is that, some of the libraries in GO uses a feature called <a href="https://golang.org/cmd/cgo/">CGO</a> which means using C code in GO, and when this feature is in use, GO compiler will try to create dynamic binary.</p><p>To solve this problem, it is often as simple as compiled the code to a statically linked binary. Do note that, some of the code that&#39;s compiling use GCC was not working, this is because often times the GLIBC library is higher than the ones used in AWS lambda environment, at least that was the case for me (I am on an Linux laptop with Manjaro Linux).</p><p>I was able to find something called <a href="https://www.musl-libc.org/intro.html">musl-gcc</a> and then used it in my compilation </p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">build:</span></span><br><span class="line">CC=<span class="string">&quot;musl-gcc&quot;</span> go build --ldflags &#x27;-linkmode external -extldflags <span class="string">&quot;-static&quot;</span>&#x27; ./main.go</span><br></pre></td></tr></table></figure><p>This proves to be working fine, once I complied the binary, zip and upload it to lambda through the interface, everything seems to be working.</p><h3 id="Attempt-2-Deploy-the-application-through-AWS-SAM"><a href="#Attempt-2-Deploy-the-application-through-AWS-SAM" class="headerlink" title="Attempt 2: Deploy the application through AWS SAM"></a>Attempt 2: Deploy the application through AWS SAM</h3><p>Often, it is not efficient to manually upload the code using a zip file through every time, that&#39;s why I started to thinking about introducing <a href="https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html">SAM</a> as a tool to simplified the process of deployment. This was when I encountered the second issue.</p><h4 id="Problem-Asking-SAM-to-compile-the-GO-program-in-an-static-way"><a href="#Problem-Asking-SAM-to-compile-the-GO-program-in-an-static-way" class="headerlink" title="Problem: Asking SAM to compile the GO program in an static way."></a>Problem: Asking SAM to compile the GO program in an static way.</h4><p>As the line above says, SAM always compiled the code in a dynamic way which is why the binary fails to work again even locally using the command <code>sam invoke local</code>.</p><p>Now it&#39;s the time to tell SAM I don&#39;t want dynamically linked binaries. As a matter of fact, none of the article available online has a direct answer to my question, fortunately, I did find an AWS documentation on <a href="https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/building-custom-runtimes.html">using custom runtime</a>. Based on this article, a GO program that wants to utilize static linking can have the following template:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Resources:</span></span><br><span class="line">  <span class="attr">HelloGOFunction:</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">AWS::Serverless::Function</span></span><br><span class="line">    <span class="attr">Properties:</span></span><br><span class="line">      <span class="attr">FunctionName:</span> <span class="string">HelloGO</span></span><br><span class="line">      <span class="attr">Handler:</span> <span class="string">main</span></span><br><span class="line">      <span class="attr">Runtime:</span> <span class="string">go1.x</span></span><br><span class="line">      <span class="attr">MemorySize:</span> <span class="number">512</span></span><br><span class="line">      <span class="attr">CodeUri:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">Metadata:</span></span><br><span class="line">      <span class="attr">BuildMethod:</span> <span class="string">makefile</span></span><br></pre></td></tr></table></figure><p>And in the MakeFile, the following corresponding entries need to be added:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">build-HelloGOFunction:</span></span><br><span class="line">  CC=<span class="string">&quot;musl-gcc&quot;</span> go build --ldflags &#x27;-linkmode external -extldflags <span class="string">&quot;-static&quot;</span>&#x27; ./main.go</span><br><span class="line">  cp ./main <span class="variable">$(ARTIFACTS_DIR)</span></span><br></pre></td></tr></table></figure><p>Doing so will make sure compiled binary are statically linked and works on lambda when bundle and uploaded.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Recently, I started to build an application with Go, it is a quite simple application that does something very basic and then sends an notification to a telegram bot. It&amp;#39;s quite obvious to me this kind of application is quite suitable to run as Lambda, and that&amp;#39;s where I decided to deploy my application to once it is working well locally. It turned out that I had to solve several issues I encountered. Here I share how I solved those issues, so you don&amp;#39;t have to scratch your head when encounter them.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Lambda" scheme="https://jiangsc.me/tags/Lambda/"/>
    
    <category term="AWS" scheme="https://jiangsc.me/tags/AWS/"/>
    
    <category term="Go" scheme="https://jiangsc.me/tags/Go/"/>
    
    <category term="Deployment" scheme="https://jiangsc.me/tags/Deployment/"/>
    
  </entry>
  
  <entry>
    <title>Upgrade openwrt on Linksys WRT1200AC with extroot</title>
    <link href="https://jiangsc.me/2021/01/24/Upgrade-openwrt-on-Linksys-WRT1200AC-with-extroot/"/>
    <id>https://jiangsc.me/2021/01/24/Upgrade-openwrt-on-Linksys-WRT1200AC-with-extroot/</id>
    <published>2021-01-24T01:29:55.000Z</published>
    <updated>2022-08-28T03:34:15.488Z</updated>
    
    <content type="html"><![CDATA[<div class="note "><h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes:"></a>Notes:</h3><ul><li>WRT1200AC (this router) contains 2 partitions</li><li>Flashing the firmware through the Luci interface actually flashes the new firmware to the inactive partition</li></ul></div><h3 id="Steps"><a href="#Steps" class="headerlink" title="Steps:"></a>Steps:</h3><ul><li>Download the bin file needed to upgrade the package</li><li>Create a list of all the installed packages on current version using <code>opkg list-installed | cut -f 1 -d &#39; &#39; &gt; /root/installed_packages.txt</code></li><li>Choose one of the following methods to flash:<ul><li>Flash the file from the Luci interface<br>  OR</li><li>Download the file to the &#x2F;tmp and then flash using sysupgrade &#x2F;tmp&#x2F;*.bin<span id="more"></span></li></ul></li><li>After the flash and reboot, you will be in the partition that you wasn&#39;t on before the flash, it will have all of your previous configs, but the extroot will not be there.</li><li>Hopefully, you will already have internet access at this point, if not, go ahead and setup internet.</li><li>Once your internet is up, you will need to run some commands to install packages needed to setup:<ul><li>First, install packages that are necessary to setup extroot:<br>  <code>opkg update &amp;&amp; opkg install block-mount kmod-fs-ext4 kmod-usb-storage e2fsprogs kmod-usb-ohci kmod-usb-uhci fdisk</code></li><li>In my case I use f2fs for my extroot, which means I need extra packages, like mkf2fs to format the flash.</li><li>Now, format the device you plan to use for extroot, in my case, I ran <code>mkf2fs /dev/sda1</code> cause the sda2 was used as swap.</li><li>At this point, copy the overlay to the newly formatted drive  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /tmp/introot</span><br><span class="line"><span class="built_in">mkdir</span> -p /tmp/extroot</span><br><span class="line">mount --<span class="built_in">bind</span> / /tmp/introot</span><br><span class="line">mount /dev/sda1 /tmp/extroot</span><br><span class="line">tar -C /tmp/introot -cvf - . | tar -C /tmp/extroot -xf -</span><br><span class="line">umount /tmp/introot</span><br><span class="line">umount /tmp/extroot</span><br></pre></td></tr></table></figure></li><li>Regenerate fstab using <code>block detect &gt; /etc/config/fstab;</code></li><li>Reboot</li><li>You should have a working Openwrt with extroot now. Change opkg&#x2F;distfeeds.conf to the corresponding upgraded version.</li><li>Now run <code>opkg upgrade $(opkg list-upgradable | awk &#39;($1 !~ &quot;^kmod|Multiple&quot;) &#123;print $1&#125;&#39;)</code> to keep base packages up-to-date.</li><li>And install all your backed up packages using <code>cat /root/installed_packages.txt|xargs opkg install</code><br>Because I don&#39;t use dnsmasq, this means once the steps above finishes, I will need to do some extra post installation steps</li></ul></li></ul><h3 id="Post-installation-More-as-a-personal-note"><a href="#Post-installation-More-as-a-personal-note" class="headerlink" title="Post installation (More as a personal note):"></a>Post installation (More as a personal note):</h3><ul><li>Remove odhcpd-ipv6only package and install odhcpd, this will ensure IPv4 dhcp functionality, otherwise, there will only be ipv6 addresses allocated.</li></ul><h3 id="November-2021-Update-Updating-to-Openwrt-21-02"><a href="#November-2021-Update-Updating-to-Openwrt-21-02" class="headerlink" title="November 2021 Update: Updating to Openwrt 21.02"></a>November 2021 Update: Updating to Openwrt 21.02</h3><p>I upgraded Openwrt version 21.02 branch in September of this year. It wasn&#39;t as easy as I had thought, but I had the problem solved after all. In release 21.02, Openwrt introduced what&#39;s called <a href="https://www.kernel.org/doc/html/latest/networking/dsa/dsa.html">DSA</a> or Distributed Switch Architecture for this WRT1200AC device. To be honest, it is counter-intuitive to setup but it seems to be a more standard way when compared to the previous configuration.</p><p>The part that I have problem with is mostly the VLAN tagging. My network ISP requires tagged VLAN to be able to use the network, so for Openwrt, I will have to tag the WAN port with the VLAN id. I was able to get around it with the following block: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">config device</span><br><span class="line">        option name &#x27;wan&#x27;</span><br><span class="line">        option macaddr &#x27;&lt;MAC_ADDRESS&gt;&#x27;</span><br><span class="line">config interface &#x27;wan&#x27;</span><br><span class="line">        option device &#x27;wan.10&#x27;</span><br><span class="line">        option proto &#x27;pppoe&#x27;</span><br><span class="line">        option username &#x27;&lt;PPPOE_USERNAME&gt;&#x27;</span><br><span class="line">        option ipv6 &#x27;1&#x27;</span><br><span class="line">        option peerdns &#x27;0&#x27;</span><br><span class="line">        option password &#x27;&lt;PPPOE_PASSWORD&gt;&#x27;</span><br><span class="line">        list dns &#x27;127.0.0.1&#x27;</span><br><span class="line">config interface &#x27;wan6&#x27;</span><br><span class="line">        option proto &#x27;dhcpv6&#x27;</span><br><span class="line">        option reqaddress &#x27;try&#x27;</span><br><span class="line">        option reqprefix &#x27;auto&#x27;</span><br><span class="line">        option peerdns &#x27;0&#x27;</span><br><span class="line">        list dns &#x27;::1&#x27;</span><br><span class="line">        option device &#x27;@wan</span><br></pre></td></tr></table></figure><p>It actually is quite straightforward once you get the idea of configuration. For example, in the above shared config, a <code>device</code> is a layer 2 in the networking stack while an <code>interface</code> is at layer 3. Here is Openwrt wiki&#39;s explanation: </p><blockquote><p>Devices are physical connections that convey bits&#x2F;frames to other computers. They operate at layer 2 in the protocol stack, have a MAC address along with several other configurable parameters.<br>Network devices identify and configure hardware components of the device: individual Ethernet switch ports, wireless radios, USB networking devices, VLANs, or virtual ethernets.<br>Alternatively, bridge devices group several network devices together so they can be treated as a single entity. A bridge device functions like a separate unmanaged (hardware) switch, forwarding traffic between member ports as needed at the hardware level to maintain performance. Each physical port can be a member of only a single bridge device.<br>Interfaces route IP packets and operate at layer 3 in the protocol stack. An interface is associated with a single device that sends&#x2F;receives its packets. Interfaces get their IP address parameters by the choice of protocol: Static, DHCP, PPP, 6in4, Wireguard, OpenVPN, etc.</p></blockquote><hr><p>References: </p><ul><li><a href="https://openwrt.org/docs/guide-user/network/dsa/dsa-mini-tutorial">https://openwrt.org/docs/guide-user/network/dsa/dsa-mini-tutorial</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;note &quot;&gt;&lt;h3 id=&quot;Notes&quot;&gt;&lt;a href=&quot;#Notes&quot; class=&quot;headerlink&quot; title=&quot;Notes:&quot;&gt;&lt;/a&gt;Notes:&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;WRT1200AC (this router) contains 2 partitions&lt;/li&gt;
&lt;li&gt;Flashing the firmware through the Luci interface actually flashes the new firmware to the inactive partition&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;h3 id=&quot;Steps&quot;&gt;&lt;a href=&quot;#Steps&quot; class=&quot;headerlink&quot; title=&quot;Steps:&quot;&gt;&lt;/a&gt;Steps:&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Download the bin file needed to upgrade the package&lt;/li&gt;
&lt;li&gt;Create a list of all the installed packages on current version using &lt;code&gt;opkg list-installed | cut -f 1 -d &amp;#39; &amp;#39; &amp;gt; /root/installed_packages.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Choose one of the following methods to flash:&lt;ul&gt;
&lt;li&gt;Flash the file from the Luci interface&lt;br&gt;  OR&lt;/li&gt;
&lt;li&gt;Download the file to the &amp;#x2F;tmp and then flash using sysupgrade &amp;#x2F;tmp&amp;#x2F;*.bin</summary>
    
    
    
    
    <category term="Notes" scheme="https://jiangsc.me/tags/Notes/"/>
    
    <category term="Linux" scheme="https://jiangsc.me/tags/Linux/"/>
    
    <category term="Openwrt" scheme="https://jiangsc.me/tags/Openwrt/"/>
    
    <category term="Upgrade" scheme="https://jiangsc.me/tags/Upgrade/"/>
    
    <category term="Linksys" scheme="https://jiangsc.me/tags/Linksys/"/>
    
    <category term="WRT1200AC" scheme="https://jiangsc.me/tags/WRT1200AC/"/>
    
  </entry>
  
  <entry>
    <title>Automating Zoom with Alfred and Apple Scripts</title>
    <link href="https://jiangsc.me/2020/12/26/Automating-Zoom-with-Alfred-and-Apple-Scripts/"/>
    <id>https://jiangsc.me/2020/12/26/Automating-Zoom-with-Alfred-and-Apple-Scripts/</id>
    <published>2020-12-26T09:55:59.000Z</published>
    <updated>2022-08-28T03:27:39.159Z</updated>
    
    <content type="html"><![CDATA[<p>Like it or not, 2020 has been a year where video conference are used a lot. For me, most of the meetings happens in Zoom. Finding the link to the meeting in the calendar and then clicking on it to join the meeting had gradually become a new norm and something I really don&#39;t like (the fact that after clicking on the Zoom link brings up your browser instead of Zoom itself, and prompting you to click again to open Zoom is really a pain). As someone who would like to automate things as much as possible, I did eventually find a solution that works for me albeit several third party tools are required.</p><h3 id="Problem-Statement-Automatically-join-a-Zoom-call-for-a-meeting-scheduled-in-calendar-without-user-interaction-on-MacOS-X"><a href="#Problem-Statement-Automatically-join-a-Zoom-call-for-a-meeting-scheduled-in-calendar-without-user-interaction-on-MacOS-X" class="headerlink" title="Problem Statement: Automatically join a Zoom call for a meeting scheduled in calendar without user interaction (on MacOS X)."></a>Problem Statement: Automatically join a Zoom call for a meeting scheduled in calendar without user interaction (on MacOS X).</h3><h3 id="Prerequisite"><a href="#Prerequisite" class="headerlink" title="Prerequisite:"></a>Prerequisite:</h3><ul><li><a href="https://www.alfredapp.com/">Alfred</a><br>  (Unclear if you need to be a paid user to create custom workflows, the author is a paid user)</li><li><a href="https://github.com/zerowidth/zoom-calendar.alfredworkflow">zoom-calendar.alfredworkflow</a><br>  (Yep, I found this alfred workflow by chance and based my work and this blog on this workflow, it is very handy and I would really like thank the author for creating this.)</li><li>Automator<br>  (The builtin automation app in MacOS from Apple)<span id="more"></span><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h3>Assume you have already installed the Alfred App, you will need to go to <a href="https://github.com/zerowidth/zoom-calendar.alfredworkflow">this</a> Github Repo, follow the instructions given and install the Alfred workflow.</li></ul><p>Once the workflow has been installed, we need to do some tweaking. Add an external trigger to this workflow and give it an id of &#39;Automator&#39;</p><p>Now, open up Automator, choose the Calendar Alarm workflow as shown in the screenshot below:<br><img data-src="/2020/12/26/Automating-Zoom-with-Alfred-and-Apple-Scripts/automator-1.png"></p><p>Copy and paste the following code to the calendar alarm:</p><script src="https://gist.github.com/KevinSJ/bd11057c5d6f0fddc7abb38bdf7844b3.js"></script><p>Now comes tricky part. You would first need to export your calendar from the cloud, export from Google Calendar Website or whatever calendar you are using. </p><p>Then open up your Calendar app, and create a new local calendar, give it whatever name you want, in my case, I simply named it Automator. At this point, you can import the ical file exported from above.</p><p>These two steps are necessary if you want to use the automation for most of your events. If there are only a few events that you would like to add the automation on, you can just use the copy function in the Calendar app and paste to the local calendar. In any case, a new local calendar is necessary otherwise the alarm trigger would not work.</p><p>Once you completed setting up your local calendars, you can start adding the file trigger which will help you open up the Zoom. To do this, you need to modify the event of your choice and then change the alert settings, change it to custom and choose &#39;Open file&#39; option, and then change the dropdown from &#39;Calendar&#39; to &#39;Other...&#39;.</p><p><img data-src="/2020/12/26/Automating-Zoom-with-Alfred-and-Apple-Scripts/calendar-1.png"></p><p>Normally, the file you created with the Calendar alarm will be saved to <code>~/Library/Workflows/Applications/Calendar</code> so go ahead to find that folder and choose that file.</p><p><img data-src="/2020/12/26/Automating-Zoom-with-Alfred-and-Apple-Scripts/calendar-2.png"></p><p>At this point, you will have a working version of the calendar automation for this event, if you want it on more events, you will need to repeat the steps of changing alerts for each of the other events.</p><h3 id="Future-improvements-amp-Alternatives"><a href="#Future-improvements-amp-Alternatives" class="headerlink" title="Future improvements &amp; Alternatives"></a>Future improvements &amp; Alternatives</h3><p>I have to admit the solution I described above is not perfect, and it requires some steps to setup, still once I set it up, everything works fine for me, and I would never need to remember to join a Zoom meeting because of this automation.</p><p>Some future improvement and&#x2F;or caveats that I found about this method is that: </p><ul><li>The events must have the zoom link somewhere (either description or location) for this automation to work.</li><li>If there were two back-to-back meetings, the automation will fail, this is because the previous meeting hasn&#39;t finished yet, and the given Alfred workflow will still list it at the top. I haven&#39;t found a good solution to this.</li></ul><p>There are several alternative ways I can think of:</p><ul><li><p>Use Zoom itself, if you are logged into Zoom and allow them to access your calendar, they will provide a join button in their app to allow you to join the meeting without more button clicks.</p></li><li><p>Bookmark the Zoom url schemes and click on it. This is basically how the workflow works behind the scene: converting the url from http to zoom url scheme and then open it. I won&#39;t go in depth on how to create a bookmark and convert the links to url schemes, but Zoom provide a great doc on their schemes <a href="https://marketplace.zoomgov.com/docs/guides/guides/client-url-schemes">here</a>.</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;Like it or not, 2020 has been a year where video conference are used a lot. For me, most of the meetings happens in Zoom. Finding the link to the meeting in the calendar and then clicking on it to join the meeting had gradually become a new norm and something I really don&amp;#39;t like (the fact that after clicking on the Zoom link brings up your browser instead of Zoom itself, and prompting you to click again to open Zoom is really a pain). As someone who would like to automate things as much as possible, I did eventually find a solution that works for me albeit several third party tools are required.&lt;/p&gt;
&lt;h3 id=&quot;Problem-Statement-Automatically-join-a-Zoom-call-for-a-meeting-scheduled-in-calendar-without-user-interaction-on-MacOS-X&quot;&gt;&lt;a href=&quot;#Problem-Statement-Automatically-join-a-Zoom-call-for-a-meeting-scheduled-in-calendar-without-user-interaction-on-MacOS-X&quot; class=&quot;headerlink&quot; title=&quot;Problem Statement: Automatically join a Zoom call for a meeting scheduled in calendar without user interaction (on MacOS X).&quot;&gt;&lt;/a&gt;Problem Statement: Automatically join a Zoom call for a meeting scheduled in calendar without user interaction (on MacOS X).&lt;/h3&gt;&lt;h3 id=&quot;Prerequisite&quot;&gt;&lt;a href=&quot;#Prerequisite&quot; class=&quot;headerlink&quot; title=&quot;Prerequisite:&quot;&gt;&lt;/a&gt;Prerequisite:&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.alfredapp.com/&quot;&gt;Alfred&lt;/a&gt;&lt;br&gt;  (Unclear if you need to be a paid user to create custom workflows, the author is a paid user)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zerowidth/zoom-calendar.alfredworkflow&quot;&gt;zoom-calendar.alfredworkflow&lt;/a&gt;&lt;br&gt;  (Yep, I found this alfred workflow by chance and based my work and this blog on this workflow, it is very handy and I would really like thank the author for creating this.)&lt;/li&gt;
&lt;li&gt;Automator&lt;br&gt;  (The builtin automation app in MacOS from Apple)</summary>
    
    
    
    
    <category term="Automation" scheme="https://jiangsc.me/tags/Automation/"/>
    
    <category term="Zoom" scheme="https://jiangsc.me/tags/Zoom/"/>
    
    <category term="Alfred" scheme="https://jiangsc.me/tags/Alfred/"/>
    
    <category term="OS X" scheme="https://jiangsc.me/tags/OS-X/"/>
    
  </entry>
  
</feed>
